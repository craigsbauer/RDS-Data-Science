<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='citi_data_combinedFINAL' inline='true' name='federated.1r2z2080amiayi19ihte91wiavrk' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='citi_data_combinedFINAL' name='textscan.0ika1az1lfbq97146giu90cl49ym'>
            <connection class='textscan' directory='C:/Users/craig/Desktop/PythonCode/Tableau/tableau_citi_bike/csv_output' filename='citi_data_combinedFINAL.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ika1az1lfbq97146giu90cl49ym' name='citi_data_combinedFINAL.csv' table='[citi_data_combinedFINAL#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[citi_data_combinedFINAL.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='ordinal' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Male' />
          <alias key='2' value='Female' />
        </aliases>
      </column>
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
      <column-instance column='[starttime]' derivation='Year-Trunc' name='[tyr:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (End Station Latitude,End Station Longitude,Start Station Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:end station latitude:qk]' />
          <groupfilter function='level-members' level='[none:end station longitude:qk]' />
          <groupfilter function='level-members' level='[none:start station name:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Usertype,YEAR(Starttime))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:usertype:nk]' />
          <groupfilter function='level-members' level='[tyr:starttime:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.70255' measure-ordering='alphabetic' measure-percentage='0.29745' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:starttime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:starttime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:usertype:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Subscriber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Customer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:starttime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>1</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2</bucket>
            </map>
            <map to='#e15759'>
              <bucket>12</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>8</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bike The Branches - Red Hook Branch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flushing Ave &amp; Carlton Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norman Ave &amp; Leonard St - 2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 31 St N&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 71 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E.T. Bike-In Movie Valet Station&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GOW Tech Shop&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sands St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cadman Plaza W &amp; Pierrepont St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gowanus Tech Station&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 Ave &amp; Farragut St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 82 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leonard St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peck Slip &amp; Front Street&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pershing Square N&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 49 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 12 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 48 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ashland Pl &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Church St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kiosk in a box Deployment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mercer St &amp; Bleecker St S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Riverside Dr &amp; W 89 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bedford Ave &amp; S 9th St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 37 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenwich St &amp; North Moore St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; Jersey St N&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 59 St &amp; Sutton Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;N Henry St &amp; Richardson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8D OPS 01&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 40 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Industry City, Building 1 Basement&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NYCBS Depot - STY - Valet Scan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9 Ave &amp; W 14 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 43 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PABT Valet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 58 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 67 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 77 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KentAve&amp;N7 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NYCBS Depot - RIS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Schermerhorn St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W Houston St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 2 St &amp; 2 Ave E&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Expansion Tech Station&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hanson Pl &amp; St Felix St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Penn Station Valet - Valet Scan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Square E&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8D QC Station 01&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bike in Movie Night | Prospect Park Bandshell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gallatin Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hanover Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joralemon St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mobile 01&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NYCBS Depot - STY - Garage 4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 45 St &amp; 6 Ave (1)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;333 Johnson TEST 1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 42 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leonard St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leonard St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LPI Facility&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pershing Square S&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shevchenko Pl &amp; E 6 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adventures NYC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bressler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Devoe St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marcy Ave &amp; MacDonough St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:end station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;333 Johnson TEST 1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cadman Plaza W &amp; Pierrepont St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 59 St &amp; Sutton Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Heights Elevator&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Newark Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NYCBS Depot - STY - Garage 4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sands St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8D QC Station 01&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 40 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kiosk in a box Deployment&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leonard St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NYCBS Depot - DYR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 43 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E.T. Bike-In Movie Valet Station&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mobile 01&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;N Henry St &amp; Richardson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SSP - Basement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Union St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W Houston St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 12 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 48 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 82 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcy Ave &amp; MacDonough St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NJCU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;York St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bike in Movie Night | Prospect Park Bandshell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafayette St &amp; Jersey St N&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newport PATH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NYCBS Depot - STY - Valet Scan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pershing Square S&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 37 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ashland Pl &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hanson Pl &amp; St Felix St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NYCBS Depot - RIS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Penn Station Valet - Valet Scan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Warren St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Church St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gowanus Tech Station&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KentAve&amp;N7 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mercer St &amp; Bleecker St S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NYCBS Depot - DEL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Corners Library&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9 Ave &amp; W 14 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Devoe St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamilton Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leonard St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8 Ave &amp; W 31 St N&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bressler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christ Hospital&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 15 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 2 St &amp; 2 Ave E&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenwich St &amp; North Moore St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hilltop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside Dr &amp; W 89 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 77 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harborsid&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Industry City, Building 1 Basement&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adventures NYC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 67 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flushing Ave &amp; Carlton Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PABT Valet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Square E&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 58 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gallatin Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joralemon St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shevchenko Pl &amp; E 6 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 71 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GOW Tech Shop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8D OPS 01&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;City Hall&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grove St PATH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LPI Facility&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverview Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 45 St &amp; 6 Ave (1)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7 Ave &amp; Farragut St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Exchange Place&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC Medical Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Schermerhorn St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dixon Mills&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pershing Square N&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bedford Ave &amp; S 9th St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 42 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norman Ave &amp; Leonard St - 2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;State St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Street (Don&apos;t Use)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baldwin at Montgomery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bike The Branches - Red Hook Branch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Expansion Warehouse 333 Johnson Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morris Canal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; E 22 St - Valet Scan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dey St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hanover Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leonard St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NYCBS Depot - GOW Annex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peck Slip &amp; Front Street&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 49 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:gender:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='% y/y Growth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Year over Year Growth in Trips (in %)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcdf:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]' ordering-field='[federated.1r2z2080amiayi19ihte91wiavrk].[starttime]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
                <groupfilter function='member' level='[yr:starttime:ok]' member='2017' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[pcdf:sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Age Trip Duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Trip Duration by Age</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='ordinal' />
            <column-instance column='[birth year]' derivation='None' name='[none:birth year:ok]' pivot='key' type='ordinal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:birth year:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:birth year:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:birth year:ok]' member='%null%' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1899' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1900' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1901' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1903' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1907' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1910' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1913' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1917' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1920' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1921' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1922' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1924' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1926' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1927' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1929' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1930' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1931' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1932' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1933' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1934' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1935' />
                <groupfilter function='member' level='[none:birth year:ok]' member='1936' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:birth year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:birth year:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[avg:tripduration:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[none:birth year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Bike ID Variation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Volume by Bike ID</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:bikeid:ok]' direction='DESC' using='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
              <text column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:bikeid:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Bottom 10 Ending Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' direction='DESC' using='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Bottom 10 Starting Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;1 Ave &amp; E 110 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;11 Ave &amp; W 59 St&quot;' />
                  <groupfilter from='&quot;12 Ave &amp; W 40 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;2 Ave &amp; 9 St&quot;' />
                  <groupfilter from='&quot;2 Ave &amp; E 122 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;2 Ave &amp; E 99 St&quot;' />
                  <groupfilter from='&quot;21 St &amp; 41 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;21 St &amp; Queens Plaza North&quot;' />
                  <groupfilter from='&quot;3 Ave &amp; 14 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;3 St &amp; Prospect Park West&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;31 Ave &amp; 34 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;31 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;34 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;34 Ave &amp; 38 St&quot;' />
                  <groupfilter from='&quot;36 Ave &amp; 10 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;' />
                  <groupfilter from='&quot;4 Ave &amp; 2 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;5 Ave &amp; E 93 St&quot;' />
                  <groupfilter from='&quot;5 St &amp; 6 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;8 Ave &amp; W 52 St&quot;' />
                  <groupfilter from='&quot;9 Ave &amp; W 14 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Avenue D &amp; E 8 St&quot;' />
                  <groupfilter from='&quot;Baltic St &amp; 5 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
                  <groupfilter from='&quot;Boerum St &amp; Broadway&quot;' function='range' level='[none:end station name:nk]' to='&quot;Bond St &amp; Schermerhorn St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
                  <groupfilter from='&quot;Broadway &amp; Battery Pl&quot;' function='range' level='[none:end station name:nk]' to='&quot;Broadway &amp; E 22 St&quot;' />
                  <groupfilter from='&quot;Broadway &amp; Moylan Pl&quot;' function='range' level='[none:end station name:nk]' to='&quot;Cherry St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Church St &amp; Leonard St&quot;' />
                  <groupfilter from='&quot;Clark St &amp; Henry St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Columbus Ave &amp; W 95 St&quot;' />
                  <groupfilter from='&quot;Commerce St &amp; Van Brunt St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Court St &amp; State St&quot;' />
                  <groupfilter from='&quot;Crescent St &amp; Broadway&quot;' function='range' level='[none:end station name:nk]' to='&quot;Devoe St &amp; Lorimer St&quot;' />
                  <groupfilter from='&quot;Division Ave &amp; Hooper St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Division St &amp; Bowery&quot;' />
                  <groupfilter from='&quot;Douglass St &amp; 3 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 118 St &amp; Madison Ave&quot;' />
                  <groupfilter from='&quot;E 12 St &amp; 3 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 15 St &amp; 3 Ave&quot;' />
                  <groupfilter from='&quot;E 16 St &amp; 5 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                  <groupfilter from='&quot;FDR Drive &amp; E 35 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;GOW Tech Shop&quot;' />
                  <groupfilter from='&quot;Graham Ave &amp; Conselyea St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Halsey St &amp; Tompkins Ave&quot;' />
                  <groupfilter from='&quot;Hancock St &amp; Bedford Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Hanson Pl &amp; St Felix St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
                  <groupfilter from='&quot;Henry St &amp; Atlantic Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Henry St &amp; Poplar St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
                  <groupfilter from='&quot;Hope St &amp; Union Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Jay St &amp; Tech Pl&quot;' />
                  <groupfilter from='&quot;John St &amp; William St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Kingston Ave &amp; Herkimer St&quot;' />
                  <groupfilter from='&quot;Kosciuszko St &amp; Nostrand Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Lexington Ave &amp; Classon Ave&quot;' />
                  <groupfilter from='&quot;Lexington Ave &amp; E 24 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Lexington Ave &amp; E 63 St&quot;' />
                  <groupfilter from='&quot;Liberty St &amp; Broadway&quot;' function='range' level='[none:end station name:nk]' to='&quot;Lorimer St &amp; Broadway&quot;' />
                  <groupfilter from='&quot;MacDougal St &amp; Prince St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Macon St &amp; Nostrand Ave&quot;' />
                  <groupfilter from='&quot;Madison Ave &amp; E 82 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Maiden Ln &amp; Pearl St&quot;' />
                  <groupfilter from='&quot;Marcus Garvey Blvd &amp; Macon St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Marcy Ave &amp; MacDonough St&quot;' />
                  <groupfilter from='&quot;Market St &amp; Cherry St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Nassau St &amp; Navy St&quot;' />
                  <groupfilter from='&quot;Newton Rd &amp; 44 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Norman Ave &amp; Leonard St - 2&quot;' />
                  <groupfilter from='&quot;Nostrand Ave &amp; Myrtle Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;NYCBS DEPOT - DELANCEY&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;NYCBS Depot - FAR&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;NYCBS Depot - GOW&quot;' />
                  <groupfilter from='&quot;NYCBS Depot - PIT&quot;' function='range' level='[none:end station name:nk]' to='&quot;NYCBS Depot - STY - Garage 4&quot;' />
                  <groupfilter from='&quot;NYCBS Depot BAL - DYR&quot;' function='range' level='[none:end station name:nk]' to='&quot;Pacific St &amp; Nevins St&quot;' />
                  <groupfilter from='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' function='range' level='[none:end station name:nk]' to='&quot;Park Pl &amp; Church St&quot;' />
                  <groupfilter from='&quot;Pearl St &amp; Anchorage Pl&quot;' function='range' level='[none:end station name:nk]' to='&quot;Pershing Square South&quot;' />
                  <groupfilter from='&quot;Pier 40 - Hudson River Park&quot;' function='range' level='[none:end station name:nk]' to='&quot;Riverside Dr &amp; W 91 St&quot;' />
                  <groupfilter from='&quot;Rivington St &amp; Chrystie St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Spruce St &amp; Nassau St&quot;' />
                  <groupfilter from='&quot;St James Pl &amp; Oliver St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Van Brunt St &amp; Wolcott St&quot;' />
                  <groupfilter from='&quot;Vernon Blvd &amp; 50 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;W 45 St &amp; 6 Ave&quot;' />
                  <groupfilter from='&quot;W 45 St &amp; 8 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;W Houston St &amp; Hudson St&quot;' />
                  <groupfilter from='&quot;Warren St &amp; Church St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Washington St &amp; Gansevoort St&quot;' />
                  <groupfilter from='&quot;Water - Whitehall Plaza&quot;' function='range' level='[none:end station name:nk]' to='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;York St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;York St &amp; Jay St&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' direction='DESC' using='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Gender Moving Avg.'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Year-over-year moving average by Gender (2017 thru Aug) illustrates Female customers grew from 2.5% to  6.5% of total volume</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[pcto:sum:Number of Records:qk]</rows>
        <cols>([federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok] / [federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Gender Volume'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Trips by Gender (2017 thru Aug)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>([federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok] / [federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Most Common End Stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Most Common End Station (2016)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[Exclusions (End Station Latitude,End Station Longitude,Start Station Name)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:end station latitude:qk]' />
                <groupfilter function='level-members' level='[none:end station longitude:qk]' />
                <groupfilter function='level-members' level='[none:start station name:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:end station latitude:qk]' member='0.0' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:end station longitude:qk]' member='0.0' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 15 St&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
                    <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;1 Ave &amp; E 15 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;1 Ave &amp; E 94 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;10 Ave &amp; W 28 St&quot;' />
                  <groupfilter from='&quot;11 Ave &amp; W 27 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;11 Ave &amp; W 59 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
                  <groupfilter from='&quot;2 Ave &amp; E 31 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;2 Ave &amp; E 96 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
                  <groupfilter from='&quot;3 Ave &amp; Schermerhorn St&quot;' function='range' level='[none:end station name:nk]' to='&quot;3 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;3 St &amp; Prospect Park West&quot;' />
                  <groupfilter from='&quot;44 Dr &amp; Jackson Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;46 Ave &amp; 5 St&quot;' />
                  <groupfilter from='&quot;48 Ave &amp; 5 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;5 Ave &amp; E 93 St&quot;' />
                  <groupfilter from='&quot;6 Ave &amp; 9 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;6 Ave &amp; Canal St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;7 Ave &amp; Park Pl&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;8 Ave &amp; W 16 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
                  <groupfilter from='&quot;9 Ave &amp; W 14 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;9 Ave &amp; W 45 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Adelphi St &amp; Myrtle Ave&quot;' />
                  <groupfilter from='&quot;Allen St &amp; E Houston St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Allen St &amp; Stanton St&quot;' />
                  <groupfilter from='&quot;Amsterdam Ave &amp; W 66 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Avenue D &amp; E 8 St&quot;' />
                  <groupfilter from='&quot;Baltic St &amp; 5 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Bayard St &amp; Baxter St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Bergen St &amp; Smith St&quot;' />
                  <groupfilter from='&quot;Berkeley Pl &amp; 7 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Boerum St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Bond St &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Bond St &amp; Schermerhorn St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
                  <groupfilter from='&quot;Broadway &amp; Battery Pl&quot;' function='range' level='[none:end station name:nk]' to='&quot;Broadway &amp; E 22 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
                  <groupfilter from='&quot;Broadway &amp; W 24 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Bushwick Ave &amp; Powers St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Cadman Plaza E &amp; Red Cross Pl&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Cadman Plaza E &amp; Tillary St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Cadman Plaza West &amp; Montague St&quot;' />
                  <groupfilter from='&quot;Canal St &amp; Rutgers St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Carroll St &amp; 6 Ave&quot;' />
                  <groupfilter from='&quot;Carroll St &amp; Columbia St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Catherine St &amp; Monroe St&quot;' />
                  <groupfilter from='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' function='range' level='[none:end station name:nk]' to='&quot;Cherry St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Church St &amp; Leonard St&quot;' />
                  <groupfilter from='&quot;Clark St &amp; Henry St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Clinton St &amp; 4 Place&quot;' />
                  <groupfilter from='&quot;Clinton St &amp; Grand St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Clinton St &amp; Union St&quot;' />
                  <groupfilter from='&quot;Columbia Heights &amp; Cranberry St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Columbia St &amp; Kane St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Columbia St &amp; Rivington St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
                  <groupfilter from='&quot;Concord St &amp; Bridge St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Cooper Square &amp; E 7 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Court St &amp; State St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Cumberland St &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Dean St &amp; 4 Ave&quot;' />
                  <groupfilter from='&quot;DeKalb Ave &amp; Hudson Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
                  <groupfilter from='&quot;Douglass St &amp; 3 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Duffield St &amp; Willoughby St&quot;' />
                  <groupfilter from='&quot;E 10 St &amp; 5 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 102 St &amp; 1 Ave&quot;' />
                  <groupfilter from='&quot;E 11 St &amp; 1 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 110 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
                  <groupfilter from='&quot;E 13 St &amp; Avenue A&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 15 St &amp; 3 Ave&quot;' />
                  <groupfilter from='&quot;E 16 St &amp; 5 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 2 St &amp; 2 Ave&quot;' />
                  <groupfilter from='&quot;E 2 St &amp; Avenue B&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 40 St &amp; 5 Ave&quot;' />
                  <groupfilter from='&quot;E 41 St &amp; Madison Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 58 St &amp; 3 Ave&quot;' />
                  <groupfilter from='&quot;E 59 St &amp; Madison Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 65 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 67 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
                  <groupfilter from='&quot;E 7 St &amp; Avenue A&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 77 St &amp; 3 Ave&quot;' />
                  <groupfilter from='&quot;E 78 St &amp; 2 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 81 St &amp; York Ave&quot;' />
                  <groupfilter from='&quot;E 84 St &amp; 1 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;E 91 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Elizabeth St &amp; Hester St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                  <groupfilter from='&quot;FDR Drive &amp; E 35 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Franklin St &amp; W Broadway&quot;' />
                  <groupfilter from='&quot;Front St &amp; Gold St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Gallatin Pl &amp; Livingston St&quot;' />
                  <groupfilter from='&quot;Graham Ave &amp; Conselyea St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Great Jones St&quot;' />
                  <groupfilter from='&quot;Greenpoint Ave &amp; Manhattan Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Greenwich St &amp; Warren St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Hancock St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Hanson Pl &amp; St Felix St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
                  <groupfilter from='&quot;Henry St &amp; Degraw St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Henry St &amp; Poplar St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Hope St &amp; Union Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Howard St &amp; Centre St&quot;' />
                  <groupfilter from='&quot;Hudson St &amp; Reade St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Huron St &amp; Franklin St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;India St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Jackson Ave &amp; 46 Rd&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Jay St &amp; Tech Pl&quot;' />
                  <groupfilter from='&quot;John St &amp; William St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Kent Ave &amp; S 11 St&quot;' />
                  <groupfilter from='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Lafayette St &amp; Jersey St&quot;' />
                  <groupfilter from='&quot;LaGuardia Pl &amp; W 3 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Leonard St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Lewis Ave &amp; Madison St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Lexington Ave &amp; Classon Ave&quot;' />
                  <groupfilter from='&quot;Lexington Ave &amp; E 24 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Lexington Ave &amp; E 63 St&quot;' />
                  <groupfilter from='&quot;Liberty St &amp; Broadway&quot;' function='range' level='[none:end station name:nk]' to='&quot;Little West St &amp; 1 Pl&quot;' />
                  <groupfilter from='&quot;MacDougal St &amp; Prince St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Macon St &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
                  <groupfilter from='&quot;Madison St &amp; Clinton St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Maiden Ln &amp; Pearl St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;McGuinness Blvd &amp; Eagle St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
                  <groupfilter from='&quot;Mercer St &amp; Spring St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Milton St &amp; Franklin St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Monroe St &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Montague St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
                  <groupfilter from='&quot;Murray St &amp; Greenwich St&quot;' function='range' level='[none:end station name:nk]' to='&quot;N 8 St &amp; Driggs Ave&quot;' />
                  <groupfilter from='&quot;Nassau Ave &amp; Newell St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Nassau St &amp; Navy St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Norman Ave &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Old Fulton St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Old Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Park Pl &amp; Church St&quot;' />
                  <groupfilter from='&quot;Pearl St &amp; Anchorage Pl&quot;' function='range' level='[none:end station name:nk]' to='&quot;Peck Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Penn Station Valet&quot;' />
                  <groupfilter from='&quot;Perry St &amp; Bleecker St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Pershing Square South&quot;' />
                  <groupfilter from='&quot;Pier 40 - Hudson River Park&quot;' function='range' level='[none:end station name:nk]' to='&quot;Pike St &amp; Monroe St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Pitt St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Plaza St West &amp; Flatbush Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Prospect Park West &amp; 8 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
                  <groupfilter from='&quot;Richardson St &amp; N Henry St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Riverside Dr &amp; W 82 St&quot;' />
                  <groupfilter from='&quot;Rivington St &amp; Chrystie St&quot;' function='range' level='[none:end station name:nk]' to='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Sands St &amp; Navy St&quot;' />
                  <groupfilter from='&quot;Schermerhorn St &amp; Court St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Shevchenko Pl &amp; E 7 St&quot;' />
                  <groupfilter from='&quot;Soissons Landing&quot;' function='range' level='[none:end station name:nk]' to='&quot;Spruce St &amp; Nassau St&quot;' />
                  <groupfilter from='&quot;St James Pl &amp; Oliver St&quot;' function='range' level='[none:end station name:nk]' to='&quot;St Marks Pl &amp; 2 Ave&quot;' />
                  <groupfilter from='&quot;Stagg St &amp; Union Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;Sullivan St &amp; Washington Sq&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Union Ave &amp; Jackson St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Union St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Vernon Blvd &amp; 50 Ave&quot;' />
                  <groupfilter from='&quot;Vesey Pl &amp; River Terrace&quot;' function='range' level='[none:end station name:nk]' to='&quot;W 100 St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;W 106 St &amp; Central Park West&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
                  <groupfilter from='&quot;W 13 St &amp; 5 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;W 34 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
                  <groupfilter from='&quot;W 38 St &amp; 8 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;W 45 St &amp; 6 Ave&quot;' />
                  <groupfilter from='&quot;W 45 St &amp; 8 Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;W 87 St  &amp; Amsterdam Ave&quot;' />
                  <groupfilter from='&quot;W 88 St &amp; West End Ave&quot;' function='range' level='[none:end station name:nk]' to='&quot;W Broadway &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;W Houston St &amp; Hudson St&quot;' />
                  <groupfilter from='&quot;Warren St &amp; Church St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Washington St &amp; Gansevoort St&quot;' />
                  <groupfilter from='&quot;Water - Whitehall Plaza&quot;' function='range' level='[none:end station name:nk]' to='&quot;West Drive &amp; Prospect Park West&quot;' />
                  <groupfilter from='&quot;West End Ave &amp; W 94 St&quot;' function='range' level='[none:end station name:nk]' to='&quot;Willoughby Ave &amp; Hall St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Willoughby Ave &amp; Walworth St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Willoughby St &amp; Fleet St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Yankee Ferry Terminal&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;York St &amp; Jay St&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' included-values='in-range'>
            <min>100000</min>
            <max>431907</max>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[Exclusions (End Station Latitude,End Station Longitude,Start Station Name)]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station longitude:qk]' field-type='quantitative' max='-8222017.6039411481' min='-8243893.0334498864' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station latitude:qk]' field-type='quantitative' max='4979563.6988223707' min='4966940.146405491' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' num-steps='16' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='true' />
            <format attr='enabled' id='tab_msalabels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
              <lod column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station latitude:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Most Common End Stations (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Most Common End Station (2016)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' num-steps='16' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='true' />
            <format attr='enabled' id='tab_msalabels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Most Common Start Stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Most Common Start Station (2016)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;1 Ave &amp; E 15 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;10 Ave &amp; W 28 St&quot;' />
                  <groupfilter from='&quot;10 St &amp; 5 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;11 Ave &amp; W 59 St&quot;' />
                  <groupfilter from='&quot;12 Ave &amp; W 40 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;2 Ave  &amp; E 104 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 105 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 99 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 41 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 43 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 100 St&quot;' />
                  <groupfilter from='&quot;3 Ave &amp; E 62 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;3 St &amp; Prospect Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;' />
                  <groupfilter from='&quot;4 Ave &amp; 9 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;6 Ave &amp; Canal St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 St &amp; 7 Ave&quot;' />
                  <groupfilter from='&quot;7 Ave &amp; Park Pl&quot;' function='range' level='[none:start station name:nk]' to='&quot;8D OPS 01&quot;' />
                  <groupfilter from='&quot;9 Ave &amp; W 16 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;9 St &amp; 44 Rd&quot;' />
                  <groupfilter from='&quot;Adelphi St &amp; Myrtle Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;Allen St &amp; Stanton St&quot;' />
                  <groupfilter from='&quot;Amsterdam Ave &amp; W 66 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
                  <groupfilter from='&quot;Atlantic Ave &amp; Fort Greene Pl&quot;' function='range' level='[none:start station name:nk]' to='&quot;Bayard St &amp; Baxter St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bedford Ave &amp; S 9 St&quot;' />
                  <groupfilter from='&quot;Bergen St &amp; Flatbush Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;Bond St &amp; Schermerhorn St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
                  <groupfilter from='&quot;Broadway &amp; Battery Pl&quot;' function='range' level='[none:start station name:nk]' to='&quot;Broadway &amp; E 22 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
                  <groupfilter from='&quot;Broadway &amp; W 24 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Broadway &amp; W 55 St&quot;' />
                  <groupfilter from='&quot;Broadway &amp; W 58 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Center Blvd &amp; Borden Ave&quot;' />
                  <groupfilter from='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' function='range' level='[none:start station name:nk]' to='&quot;Christopher St &amp; Greenwich St&quot;' />
                  <groupfilter from='&quot;Clark St &amp; Henry St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Court St &amp; State St&quot;' />
                  <groupfilter from='&quot;Cumberland St &amp; Lafayette Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;Devoe St &amp; Leonard St&quot;' />
                  <groupfilter from='&quot;Division Ave &amp; Hooper St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Duffield St &amp; Willoughby St&quot;' />
                  <groupfilter from='&quot;E 10 St &amp; 5 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 110 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
                  <groupfilter from='&quot;E 13 St &amp; Avenue A&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 2 St &amp; 2 Ave&quot;' />
                  <groupfilter from='&quot;E 2 St &amp; Avenue B&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 32 St &amp; Park Ave&quot;' />
                  <groupfilter from='&quot;E 33 St &amp; 2 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 41 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 43 St &amp; 2 Ave&quot;' />
                  <groupfilter from='&quot;E 45 St &amp; 3 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 48 St &amp; 5 Ave&quot;' />
                  <groupfilter from='&quot;E 5 St &amp; Avenue C&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 52 St &amp; 2 Ave&quot;' />
                  <groupfilter from='&quot;E 53 St &amp; Lexington Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 55 St &amp; Lexington Ave&quot;' />
                  <groupfilter from='&quot;E 56 St &amp; Madison Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 58 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
                  <groupfilter from='&quot;E 6 St &amp; Avenue B&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 66 St &amp; Madison Ave&quot;' />
                  <groupfilter from='&quot;E 67 St &amp; Park Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 7 St &amp; Avenue A&quot;' />
                  <groupfilter from='&quot;E 71 St &amp; 2 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 81 St &amp; York Ave&quot;' />
                  <groupfilter from='&quot;E 84 St &amp; 1 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 91 St &amp; Park Ave&quot;' />
                  <groupfilter from='&quot;E 95 St &amp; 3 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;E 97 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Elizabeth St &amp; Hester St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
                  <groupfilter from='&quot;Forsyth St &amp; Broome St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Franklin St &amp; W Broadway&quot;' />
                  <groupfilter from='&quot;Front St &amp; Gold St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Fulton St &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Garfield Pl &amp; 8 Ave&quot;' />
                  <groupfilter from='&quot;Graham Ave &amp; Conselyea St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Hancock St &amp; Bedford Ave&quot;' />
                  <groupfilter from='&quot;Hanson Pl &amp; Ashland Pl&quot;' function='range' level='[none:start station name:nk]' to='&quot;India St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jackson Ave &amp; 46 Rd&quot;' />
                  <groupfilter from='&quot;Jay St &amp; Tech Pl&quot;' function='range' level='[none:start station name:nk]' to='&quot;Johnson St &amp; Gold St&quot;' />
                  <groupfilter from='&quot;Kane St &amp; Clinton St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
                  <groupfilter from='&quot;Leonard St &amp; Bayard St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Leonard St &amp; Manhattan Ave&quot;' />
                  <groupfilter from='&quot;Leonard St &amp; Meeker Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;Lexington Ave &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
                  <groupfilter from='&quot;Lexington Ave &amp; E 29 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Lorimer St &amp; Broadway&quot;' />
                  <groupfilter from='&quot;MacDougal St &amp; Prince St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Macon St &amp; Nostrand Ave&quot;' />
                  <groupfilter from='&quot;Madison Ave &amp; E 82 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Milton St &amp; Franklin St&quot;' />
                  <groupfilter from='&quot;Monroe St &amp; Bedford Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
                  <groupfilter from='&quot;Murray St &amp; West St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Nassau St &amp; Navy St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Norman Ave &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nostrand Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - FAR&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - PIT&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - SSP&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - STY&quot;' />
                  <groupfilter from='&quot;Old Fulton St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Pacific St &amp; Nevins St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Ave &amp; St Edwards St&quot;' />
                  <groupfilter from='&quot;Pearl St &amp; Anchorage Pl&quot;' function='range' level='[none:start station name:nk]' to='&quot;Peck Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Penn Station Valet&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pershing Square North&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pershing Square South&quot;' />
                  <groupfilter from='&quot;Pier 40 - Hudson River Park&quot;' function='range' level='[none:start station name:nk]' to='&quot;Plaza St West &amp; Flatbush Ave&quot;' />
                  <groupfilter from='&quot;President St &amp; Henry St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Riverside Dr &amp; W 82 St&quot;' />
                  <groupfilter from='&quot;Riverside Dr &amp; W 91 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sands St &amp; Navy St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Scholes St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Shevchenko Pl &amp; E 7 St&quot;' />
                  <groupfilter from='&quot;Smith St &amp; 3 St&quot;' function='range' level='[none:start station name:nk]' to='&quot;St Marks Pl &amp; 2 Ave&quot;' />
                  <groupfilter from='&quot;Stagg St &amp; Union Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;Stanton St &amp; Mangin St&quot;' />
                  <groupfilter from='&quot;State St &amp; Smith St&quot;' function='range' level='[none:start station name:nk]' to='&quot;Van Brunt St &amp; Wolcott St&quot;' />
                  <groupfilter from='&quot;Vernon Blvd &amp; 50 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;W 11 St &amp; 6 Ave&quot;' />
                  <groupfilter from='&quot;W 13 St &amp; 5 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;W 14 St &amp; The High Line&quot;' />
                  <groupfilter from='&quot;W 15 St &amp; 7 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;W 34 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
                  <groupfilter from='&quot;W 38 St &amp; 8 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;W 45 St &amp; 6 Ave&quot;' />
                  <groupfilter from='&quot;W 45 St &amp; 8 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;W 47 St &amp; 10 Ave&quot;' />
                  <groupfilter from='&quot;W 49 St &amp; 8 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;W 52 St &amp; 5 Ave&quot;' />
                  <groupfilter from='&quot;W 52 St &amp; 9 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;W 54 St &amp; 9 Ave&quot;' />
                  <groupfilter from='&quot;W 56 St &amp; 10 Ave&quot;' function='range' level='[none:start station name:nk]' to='&quot;W Broadway &amp; Spring St&quot;' />
                  <groupfilter from='&quot;Warren St &amp; Church St&quot;' function='range' level='[none:start station name:nk]' to='&quot;York St &amp; Jay St&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
                <groupfilter function='member' level='[yr:starttime:ok]' member='2013' />
                <groupfilter function='member' level='[yr:starttime:ok]' member='2014' />
                <groupfilter function='member' level='[yr:starttime:ok]' member='2015' />
                <groupfilter function='member' level='[yr:starttime:ok]' member='2017' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station longitude:qk]' field-type='quantitative' max='-8221591.2501182174' min='-8247666.3890685076' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station latitude:qk]' field-type='quantitative' max='4980228.2798438398' min='4965181.2206222145' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' max='105000' min='5000' num-steps='16' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='true' />
            <format attr='enabled' id='tab_msalabels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
              <lod column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station latitude:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Peak Hours (Summer)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Peak Hours during Summer Months</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='6' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='7' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='8' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[hr:starttime:ok]</cols>
        <show-full-range>
          <column>[federated.1r2z2080amiayi19ihte91wiavrk].[starttime]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Peak Hours (Winter)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Peak Hours during Summer Months</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='1' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='2' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='12' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[hr:starttime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Quarterly Volume'>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Quarter-Trunc' name='[tqr:starttime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[tqr:starttime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Subscriber Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Volume of Trips by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year-Trunc' name='[tyr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[Exclusions (Usertype,YEAR(Starttime))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:usertype:nk]' />
                <groupfilter function='level-members' level='[tyr:starttime:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tyr:starttime:ok]' member='#2017-01-01 00:00:00#' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:usertype:nk]' member='&quot;Customer&quot;' />
                    <groupfilter function='member' level='[none:usertype:nk]' member='&quot;Subscriber&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:usertype:nk]' />
                  <hierarchy name='[tyr:starttime:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:usertype:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:usertype:nk]' />
              <groupfilter function='member' level='[none:usertype:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:usertype:nk]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[Exclusions (Usertype,YEAR(Starttime))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:usertype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[tyr:starttime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Ending Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' direction='DESC' using='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Starting Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]' direction='DESC' using='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Volume'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Volume of Trips by Year (2017 thru Aug)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4443292</value>
                <value>2013</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7286236</value>
                <value>2014</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8615891</value>
                <value>2015</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10895606</value>
                <value>2017</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Volume (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Volume of Trips by Year (2017 thru Aug)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Gender' datatype='integer' name='[gender]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Male' />
                <alias key='2' value='Female' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</column>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4443292</value>
                <value>2013</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7286236</value>
                <value>2014</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8615891</value>
                <value>2015</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10895606</value>
                <value>2017</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Volume Bike ID'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Volume by Bike ID</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='citi_data_combinedFINAL' name='federated.1r2z2080amiayi19ihte91wiavrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1r2z2080amiayi19ihte91wiavrk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' caption='Bikeid' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1r2z2080amiayi19ihte91wiavrk].[none:bikeid:ok]' direction='DESC' using='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' />
          <filter class='categorical' column='[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</rows>
        <cols>[federated.1r2z2080amiayi19ihte91wiavrk].[none:bikeid:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>NYC Citi-Bike Analysis for 2013-2017(thru Q3)</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='402' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Demand for bikes has increased year-over-year' captured-sheet='Volume' id='1' />
                  <story-point caption='Demand for bikes has increased year-over-year increasing 33% in 2016' captured-sheet='% y/y Growth' id='2' />
                  <story-point caption='Subscriber volume have also grown' captured-sheet='Subscriber Trends' id='3' />
                  <story-point caption='Analysis of quartley trip volumes illustrates a repeating peak utilization during summer months' captured-sheet='Quarterly Volume' id='4' />
                  <story-point caption='Peak usage hours in summer months are 8:00-9:00 am and 5:00-7:00 pm, aligning with typical peak commuting hors' captured-sheet='Peak Hours (Summer)' id='5' />
                  <story-point caption='Peak usage hours in winter months are consistant with peak summer hours, suggesting bikes are primarily utilized for commuting' captured-sheet='Peak Hours (Winter)' id='6' />
                  <story-point caption='Top-10 starting locations' captured-sheet='Top 10 Starting Locations' id='7' />
                  <story-point caption='Top-10 ending locations stations' captured-sheet='Top 10 Ending Locations' id='8' />
                  <story-point captured-sheet='Bottom 10 Starting Locations' id='10' />
                  <story-point captured-sheet='Bottom 10 Ending Locations' id='11' />
                  <story-point captured-sheet='Gender Volume' id='12' />
                  <story-point captured-sheet='Gender Moving Avg.' id='13' />
                  <story-point captured-sheet='Age Trip Duration' id='14' />
                  <story-point captured-sheet='Volume Bike ID' id='15' />
                  <story-point captured-sheet='Most Common Start Stations' id='16' />
                  <story-point captured-sheet='Most Common End Stations' id='17' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Volume'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='% y/y Growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Subscriber Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:usertype:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Quarterly Volume'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[tqr:starttime:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Peak Hours (Summer)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[hr:starttime:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station latitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station longitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Peak Hours (Winter)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[hr:starttime:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[mn:starttime:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station latitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station longitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 10 Starting Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 10 Ending Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bottom 10 Starting Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bottom 10 Ending Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gender Volume'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gender Moving Avg.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Age Trip Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:birth year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Volume Bike ID'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:bikeid:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Most Common Start Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station longitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station latitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station longitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Most Common End Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station latitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station longitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station latitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station longitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Most Common End Stations (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station latitude:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station longitude:qk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station name:nk]</field>
                  <field>[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.0</value>
                <value>0.0</value>
                <value>&quot;3 Ave &amp; E 62 St&quot;</value>
                <value>1</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station latitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station longitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:end station name:nk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station latitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:start station longitude:qk]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Volume (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bike ID Variation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r2z2080amiayi19ihte91wiavrk].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:bikeid:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[none:gender:ok]</field>
            <field>[federated.1r2z2080amiayi19ihte91wiavrk].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='159' name='% y/y Growth' width='192'>
      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
      qTEAJLX/AaVwcR3kDEkGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Age Trip Duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bike ID Variation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy995ccx5Xv+Ulvy9v2FmhYEiBBA5CiKGk40siPxmjsm919s+e9/2Z/2p92
      952z7+ye59/O00iiRoakKIrewXvfjfa+fGVW7g+RlVXd6AKbAEiREvMcIG5lREZlZ2XEN+69
      33tDCoIg4Ivji+MP9JB/1zfwxfHF8bs8vhgAXxx/0McXA+CL4w/6+GIAfHH8QR/qTif/2yun
      +ODSDAAHxwrMbTSp1BrIssSjE0VOXl0A4PE9RT68Oh9dd3Sy8/nIZCFqd3gsx/lby/gtoW8/
      OpHn1DVRt384y7XZVRpeC0NTGCsmuTi9DMAjY3lOXV8U8niO09eXAEi6BnHb4Pbihuh/NMfp
      G6JdzNLJxC1uLtxdd3g0x5mbQs4nHQAW1iphXZYzN8X3HhrJRPJIPs7KZo3NamPndrdWANg3
      mOLK7Dq+38LQVYYyLlfm1sUzHE5zNmx3cDjDudtCTjoGtqFxZ6XMYMZhs9ZkvSK+5+BQOmp3
      YCjNuelVACb7EtxeKtHwWmiKzGg+xuXZDZKOjm2o3FmphNckOT+9JuTBFOfD64spm3qzBYCu
      yqRdg/PTa+wfFO2nBhJcnt1gOOsyt1Yh7RqU6x79KXtLu+3leDHG9HKFiULsnu32DyZZWK8i
      yxLVhk/S0VlYrzKUcbg6t7ml3WZVPA9TV2gF0PRauJbKSqlOX9Lm5mKJPX1x/FbAzcUSfSmb
      5VIN19Roei2CAAxNZqPaJBc3sQ2V89Nr7O1PcHVug6GMs/MAeO/iND967SwApWqdy/NVVks1
      FFlCkRVefPsqAKam8rN3rkXXGbrKv7x7Xciays/fE7IsSfzq5E08P3zwmsIv3r8BgN8KePPC
      HWoND9vQKNea/Pr07bCdyq8+vBld05b70g6FpMPJcHDoqsKvPrwFQC5hMVJI8P6V+ajupZO3
      75In+5IgwdXZ9aj/l0+128mR/NhEnttLJZY2quHfpfDK6emov7YM8Pr5WZp+C9fUODya5c2L
      c1G7X5+5c5fcn3ZIugbnbq9yaDjN8maNubXwe1SFV8/NRte0Zc9v8eGNZaoNH1NTqHstfnth
      nr6UTdLRo5deV2V+c77zDH5zQchT/QlKNQ9JAktXGco4/ObCPJoq85sL88iyxGsX5jk65nHx
      zjpDGYeVUp0Dg8kt7baXTb/FqVurBEFwz3aaKnN1bhNVkVivNOhL2Vyd26A8kubNy4tb2i1u
      iOcRszT8VkCt6ZONGdxeKjM1kOD9a8tIEjT9Fu9dW2LfQJLbS2UyMYNqwycIAlxTY369ylg+
      RsrRee3CPJIEb1xc4NHR9M4D4OmDI9imDsC+kTx71xuU600UWeLQWB5VESunRybySFLnukfG
      8pF8eCwHYd3BkSymoUYIcHgsF103NZgm6Rg0/BaGqjBSSOCYGgCHRrLtLjjYJSccgQD9GTeq
      ax+upZOJm+QTNgAHhjNR3YGRTPS9ubB+si8l6oYyUf/7u64ZysUZKyYo1ZqibihD+w/bP5SO
      /sa9/SlsQ8XzA0xNoT/jErPE37F/MBX1t38wFd1DwjawDZWBtEN/2qFUa7JRFd+zbzAZXbNv
      MBl9z3ghLp6X10JTZUZyMUxNIWHrWIZKf0r8XfsGkkjhF031J6K+CkmLV8/N8cUhjh0HwDsX
      Z/jn1y8A8LXH6lyY2YgQwPMDfvzmFQAkJP75zcvRdZIs8c9vdOp+/JaQPa+1BQEAfhqiSLXu
      bUGAJ6f6IgRAkngxRJgA+FmILtsRAODFsG47AgD87L0bkfwvIfJsRwAk+Pn7N7vaCXk7AkjA
      zz+4FbX7eYg8Da/VEwFA4hcf3o6u+eVJgRr9aYdUFwIsdSGABPzy1EznmtNCPjHlbUGAY5P5
      HREA4KUzs12yQJ2p/gRP7clTa3pkYyYNr8WfPjmCbah899gwSUfHNTUyMYNCwiITM8Tv1PD5
      i+OjyLLED54awdRVvvfEMAlb54cnxmj6LcYLMZp+wA9PjNEK4C9PjAFEn394YowAGMo6LG/W
      STk6G9Umh4dTqIpMJm6ScQ2+98QwjqkxmBHtsjEDJFjaqJGNm4zmY2Rcg3zCIuOK+0s6BhnX
      4NBQivVKg7RrRO2XNupkYgatIOAvT4zh+wF//vQYNc/feQA8uX8ISxez19RwjonB2hcI8Aki
      QP+njADvXl1idrXKsYks71xdZLIYZ3a1QtzW8fwWDa9FytGZWamwpy9O3NJ5+ewsJ6byvHt1
      iQODSW4ulsjFTcp1j719CV4+O8tXDvZtKZ/bX+C3Fxd4bn8xOv/q+Tmemcrz6vn5Le2nV8pU
      6h4AjqGysFFjNOdybnqNJyayyLLE6xcXODKa5vLsBv1pm7VyA12V0RQ5Wk5lYyYvn53l+YNF
      Xjk7x5OTWc7eXmMs7zK/XuPQUGrLPe44AN4+P92FABNcmFn/AgE+QwhQrnvUmz66qhAzdaaX
      y1QbPq6pMr1cBsSL3pbzCZPpFSHLEuwpxsm4JoMZh3eudp7hH+Kx4wDYfnzrqT1fIMBnCAFe
      PnOHWtOn6QfUPZ9yzcM2PFRFolwTs2ij2YruueG1KIdyrelz4c4GMysVJAmeO1BEkSQG0g7F
      pMXsaoX+tM3cWpUnJ3P4rYCm3+J7x4ZxTJWUY5BydfpSNvm4iSxLLG3U+atnxml4Pn/+9Ciy
      JPH9J0ewdYW/fXaC1UqDv39ukrVKQ3wui8/1ps9fPD2G32oxnHOZW60wkLaZXatyYqqA3woY
      zDjELaGP/slRnaStc2g4zcJ6lWLS4s5qlb6kxfx6lWzMpNb0o+/6++cmWS3V2f90ksWNGk9M
      5Fgq1bfU914CGZ0l0L/72akvEOABEMA2tMgMmXINzt8W6/R80iJu6VydW8dvBayW6yxt1KJ2
      F2ZEu2SXbOq7mrPueTw1mWOt0mAs7/IfX79OteFjqDKPjWd549ICXzlY5OWzc3zlYJG5tSor
      pQamJqPIEhvVJsWkxbX5TQ4Np3AMlZfPzvHUZJYzt9cYL8SYW6sStzS8VsB4PsYr5+Z4/kDx
      rvLM7VWKSYur85scHk7x9pWlLfWLmzXmQytQK7QCpV2hm3T3dXxvjvevLbNvIMGtpTKPjqR7
      fuf2sscS6Db//MZFQCyBnntkhHLoB9g3nI3WalNDaUq1kei6vQNpnn90WMiDKZ6vDkftPi0E
      iFk66XsigOgll7CATwcBsnELN/ybDFXBtcRjtw0VU1dwTQ1TV7A9dUs7ZwfZ1BRsQ0ORZXRV
      CetULF3F1IQMoGty1Jeuyluuf+vKIjMrFZ7ek+O5/UUano+qyJRC9PhDOnaFAP/51QuslWqo
      skw6ZvPOBWFRKCRt3r3YsTTkkw7vXhKzXi5p8+5lISdcg5++c+0eCDDbhQDF+0KAn73XQYDh
      /L0QQMzsAgGCTwUBvnVslPnQ4bZRbTC/2u5Loum1mF+rknINlkt1FtcFAmxWG5GTrltez7os
      btSoNjwx0NI28+uiP8/XI3mz2twiL4RyzNR6IsDfPTeBqcmM5ly+cWSA/pRNX8pms9rE0tXo
      99MUmbF8jLRroCoyiiwzkLZJuSbZmMGePi9qZxsqf6z2M5C20ZR+hrMOhibTl7RJubpw5uVc
      MjGDmKUxmnVRFYnhrMNA2mYt18A1VAKgUveIWxqGpqAp/QyFfeXiJmnHwLU0xvIxkrbO1x/t
      py9l83Wtn76kLT7vUO4KAfYOpNmsNlBkmWLaZV84QxZSDlNDndlSfE4LOekwNSjkYsrhW09O
      3AMBTBq+/2AIEFbGLJ107LOFAENZl4misMTk4hbjfXEAMq6JYwonT1/KwTE1YuF6Nxs3GS/G
      O3JByPmERbnmUfda6Kr48ccL4mV0DA2vJV7SbMxkPB+L5LFQ7kvZPRHg/Mw6b1xaBOb5ysEi
      /+3tW+wpxjh5c5Xje3O8dmGB5w8UeOXcPM8fKHBpdoNK3Qfg9nKZxc06I1mHlKPzyrl5nt2X
      541Lizw6kuLNK0sMpGzOz6wzXnD5v1+9uqWvi7MbVBs+F2bWcQyN966tMJJzOD+zzrHxDLIk
      8cZl0deVuU36UxZnptfY1x/n/33tOs8fKPDTD2d4/kCBH713my/vL/Dvw+/497/pXe4KAX72
      znXWy3UUWWKtVGNmaROAtXKdO8ub0XVr5Rp3lksArJfrkbxWrvOTt6/+wSKAfFTi5A1B48jG
      TU5dF1SKtif4/O1V/FbAUrjmBcjFTU7dWAmvsTh1U8iOqXFuepVK3cfUFQxN4fTNVfpSFgm7
      oyvk4hanb61G33kmlBuefw8EmMTQFEDY1f8Qjl0hgGvptIIARZYxdZW4LR6OqavRjBV9tsVn
      Q1ci2dRU9gyk8MMBUEja7BkQM28x5TDZn6Te9LF0lWLaYU+/qJsoJvnmE+PA5xsB9vQnqTXF
      TDleTERy0hGzdtIx7uICjRXiHG+IdmP5GMenCuH9JjA0lYbnR1ygICDiAiUd8cxH8y5P781F
      19caXvi8bd641AsB1kIEgG89NshwxiEfNxnNuWRjBqM5h0zMjEq/BbWmB0iYmng38gmTuKUz
      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
      mOlA2gHATPwfl/wBqzNlgucAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bottom 10 Ending Locations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXSElEQVR4nO3dyY8cZ5rf8W/kHrkvlVmVtZHFRaIWal8oqVe13W33jDH2oQeeaYwBn4z5
      A+bewJwGPrh9tA8GDHuAMdqADbhnultuaShRlCjuZBVrX7O23PclIjMjwgdKbUkslkqqqqSk
      eD43VkS+7xOR9Ys33liKimVZFkLYlONRFyDEoyQBELYmARC2JgEQtiYBsBtDY+HeDNPT96h1
      eg8srhcL6AZYlsn22iKLa9uYh+quztpWHuhRyFcO0dLxkADYjbbL7y7O4na7cSjKA4tv/v43
      FHRob9/ld9fWaexmKZcyvH3l1mfWa+zMcfHWIr12lbnVzEO762zd4T/+5/9OvlPld3//wZFv
      zmG5HnUBYvAquQzT036CcYP/8h/+EYwmb/7rn3Llnas0cnnOAJ7IMErlKtmhKOrCHd55+x7D
      yQR33/lfLGQd/OT1Id6+liPu+gGzs3d59/d9UFz8+OVxfvXhDr1mg7/6q78E4Olnn+T2zRks
      YPbD3/D3/3iFJ978GbkP3sHh69ENTVJptPjxEyF+f3WR8fM/5M9/emEg+0JGABuaevo1fvaz
      PyYZ8DB6+lleP5dma3OXqVd+xNMnUwCYloc/+flf0F94Dz31BM+8eIFxTxXdM0a0p5E6c45n
      X/kOp4ZUajtrjL/4T3ki7qXc6XH2+Td4fDhE9+P+wiOn6JdWaWg6S0tZnnn6DIVsCX98nB9c
      eI7Tz73BcBg2VjI88dJ3eerUyMD2hYwAduOOErau8qtf/W9e/f4rPPnUBDElyHh6kunL72Kl
      ThF2A4bBR2//Ft/Tb3L+xBiN1Tm2u6dIx91Mpl9jJH2W2L232dZe4Lt//HNKa7fpph/n3JkY
      AT2MpT6DB1DikzzlDTMy+Rpq0mDUU2Wj1uWF0ZM4tRTRYR+nHCESzzzPyaEA7165gzF+cmC7
      Q5E7wcLOjnQEME0TwzAAkFyJb4JjGQFM08SyLJxO51E3LcSROvQIoLeKXL8xS9f0cOF7F1Bl
      Wi2+QQ796+pRY7z62gUmEn66h7ljIsQjcOgAWKbB+soS4YnTROSakviGOXQAGoVVZhY3mZ+5
      TV0/ipKEGByZBAtbkymrsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJ
      gLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCw
      NQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJ
      gLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLC1fQPw1ltvsb29PahahBi4
      fQNQKBTQNI16vT6oeoQYqAOdAv3yl7887jqEeCQOPAeYm5vjrbfeOs5ahBg4xbIs62ELV1dX
      SSaTrK6uMjExQbPZZHJy8gsbNU0Ty7JwOp1HWqwQR23fAHxVEgDxTXGgUyDTNOl1NfrGkWdF
      iEfK9cWrNHnv9zco5efwTX6PP/rek8dflRADcoARQGHl7ke4hsYwO9rxVyTEAO07AmjNIrdu
      3OPUCy9hmQaxieFB1SXEQOw7Arg8fiZOxtlcr3F6MsLaam5QdQkxEF8YgPET54h4ynxwdRo1
      GhxUXUIMxAEmwV3i4+f5J688jV9Vj78iIQboQJdB1268w3/7u//J5dtrx12PEAN1gAAE+O5P
      3mQ0leKx06PHX5EQA3SAANT46OYOF54d5b33po+/IiEG6AAB8BPw1Hjv/dsk5TKo+JY5wCTY
      5Mz51zkxGWUz3z/+ioQYoAOMADq3r90ht73KvcXd469IiAE6QADCTKV6XL6V4exTJ4+9ICEG
      6UCT4Jn5XcbSIyzfXDz+ioQYoANNgsfGwty+eo3k2Ynjr0iIAdp3EmyZPe5euYRz9Fn+zQ+G
      md+sA2MDKk2I47fvCFDOzLLWCDDm3uU//dffcursqUHVJcRA7DsC9Ps6Szc/YFvV6bQU5pcy
      pF86O6jahDh2+74TbFkWpmn+/5UVBw6H8oWNyjvB4pti/xFAb6Ob0NMtYjF5FFp8++wbgFYx
      w6/fvUxuC166cJbU5OM8MTXymXUs00DTe/h8PpQvHhyE+FrZdxIcHXucP/rxD4n5Ne5Oz9Hn
      wVOa/NYaN27dQTf3aECIr7n9nwVSHMSSI7jUED99+SRXF7c4P5X8zCrDk2doa719m/mH2Rm0
      /uGfIzoZT/DC+IP3Itpdg7Xy0bywPxnzEfLuMXeprkNj5wh6UGDitb0X7d6E/hFsh5qAoccf
      +HG3rZG5uXr49oHhx8cIJSMP/Hz92iJ9/fDfdXg4SursHo/ft9uwunLo9gGYPHGQh+ECvPjM
      BNcXirzxo5cfWForZtnN5iCUYiqd2LOFv71+jUqnfdhy+cm5J/YMQKtrcH2reej2ASI+194B
      KC1C5v3Dd6A4Hh6AjUvQKR2+j9TTewZAa2jc+831w7cP+MLqngFYePsOWqNz6PYnXzi9dwBa
      Tbh65dDtAxAOHyQA8NQrb/LUKw9fPjp5Erf8TwPiG+gAv7Ytfvfrd9B7/c9cEv1EZGiEkydP
      Mja899FfiK+zA/1hrObuAn/7d/+DK9Mbx1+REAN0gFMglcfPP4EzPobDFzr+ioQYoIO9E3zl
      DrntHWZuLB1/RUIM0AECEOKxx1LcvnmH08/Jc0Di2+UAATBp1HXCET+GIXe7xLfLvgGwTANd
      q6G7R/mzP/0RG7PrAypLiMHYdxLcqWf5v29dRjMM/s9vK0w9851B1SXEQOw7AvijY/zJn/5L
      kj4HpmnR73YHVZcQA3GgP45b11W+//2XUYMP3voW4pvsAJNgi0puizt37rCxWzn+ioQYoAM9
      wdOqlykWizTb+nHXI8RAHehO8L/6+Z+hmxahWPKLVxfiG+RA9wFa9TqVnTku314/9oKEGKQD
      jAB9ttbXqGg1iI0ff0VCDND+7wRXNvmHX19EAwxdJ5KSl37Ft8u+p0BqJM0/+xf/nImhAC5/
      gmeeODmgsoQYjH0D0Mgv8e//+m9YqzkYHUmgtQ//qpsQXyf7ngL5YxP827/8dxgf/zsYDQyg
      JCEGZ98AuL1Bps6cGVQtQgycvMoubE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBs
      TQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0C
      IGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBs
      TQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0C
      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
    </thumbnail>
    <thumbnail height='192' name='Bottom 10 Starting Locations' width='192'>
      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
      R6K7F2TScAAfHsViwf7Ka09dVlzL0io3uu7DPxoidCK2e0G1eiCvAcAajUFsYPeCpQWo1bpu
      Xz15CvXkqV2PN+p1Pr56pev2AU6cmuh+CrSxMMXq5jZTM3IDPfHd0/UIMDpxgdGJgyhFiN6T
      w6DC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQA
      wtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLU
      JADC1CQAwtQkAMLUJADC1CQAwtS6DkBhZ5X33/+ArWzlIOoRoqe6DsBaIsfrr18itbl+EPUI
      0VNdB8BitWOzu1CV9kHUI0RPdR0ADw2uXfsQ3Rk+iHqE6Kmub5J37OyLDDZaOJyug6hHiJ7q
      OgAWixW3+2EzhmGg6zq6/vht452BMFq72W1XWN2+z2++/UV2K64TQ123D4DL/vQ+vD4YGOy+
      fYsCT2sfcITcqM7ub91s8zme/hosysG8BgC74+mvIxKFZvfvNf7AU9u32e2MnzjZffuA0+1C
      MYwDuo07fHaH+E8DYLHsf4al6/ozPV/TtM9vxL3P2gCUZ7hp97P28ayv4dP19W1aT5/W9W1a
      T4f5Xh/oneIVRfms02d9Y5/lufBwpTzr3zyrZ+3jWev5OhsKM66nw3wNBzoCfOrrbG2/Th+H
      2X4v+pD19M23fyix+uJIoLXr3L9zg2s3J6m3nz73/TLF1DpXr1xlZTtLp9VC+0JUPx9pdFbn
      Jrly5UNSpSYYOnN3PiZff/g8o1Pj7tQce+bc0Fic/oSPP5mm/YXdl8/60FrM3LnBjck52lo3
      2wuDVqv1WPsKOhuL01y5eo1UsU45u821q1eYX9shn9yh0uyQeDBPstKglN2h0tRJrs3z9ttv
      8cHVjyg/Zbpdymaod7THXsMXZdYXWE7kMQyN6clPKNa+/BC2YRjU6rU9X9UX+1ibnyRTblNJ
      bpBvffnfGJpGq9PZs92ntf+4NpN3pujosLG1+fChaopkRSeztcyHH35EKptmI5EHOiSTGZ58
      99Rf/epXv9pXFV/T5vIc7oFTTBwdQLEYFDMpMsUm7dIOqztFAm6VWtuCUa/QUgyW5+fQHX48
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Gender Moving Avg.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gender Volume' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Most Common End Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='24' name='Most Common End Stations (2)' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAAW0lEQVRYhe3SsQ2AQAwEQUC0QhsURP+5KYGMCX4ndrA6eZ+Z2RZ26ACtAXSA1gA6QGsA
      HaCdXwfXc//RwSz/AQ2gA7QG0AFaA+gArQF0gNYAOkBrAB2gNYAO0F44IAT7xOXqZgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most Common Start Stations' width='192'>
      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
      g7mr1gLcdLqLMYbxQ8e5+N1/Q3htkkzWon9ykuxvfXvR+rvneZSfeIawtRMVBugtO8m1tC2L
      B79GApACSqlbPpRRFHHtz14hHJsEoFLSzLx9gvyLyaLXtSyLXFsH8d7PYoxZ9PDseiQBEDit
      zfNeu7sfueMBr4XOJFhOJAApliQJl6Yu8ur+MlNbBtj4ygQ71jxO27e+tqwf6rshAUixIAh4
      degVhpKrsDLLR/+4nT0bvkxuxcIDZY1I5gKlXJBc3/Ik1hGxWXySXCORAKSY67rs7XyKnJ3H
      VS4Ptj1CV6F78V9sIDIZLsVqu0aMFUeJkpDOQhfZzPI43O5+kQCIVJNG8DJUG72t9e+n6Rv7
      fpMALDNJkjAyeZV3Rw7jWz47ex6hbUW7hODnJAFYZmZK0/zRqe9xfro6vfnizHm+seP5ZTHx
      rB5JAJaB2mxNpRTTlWkuFS/MvffRxKmbTnsRd04CUOe01pQmp4iHLoLjk+1ooy+/mgsz1R0e
      NrZsabh1ur9M0gtUx4wxzE5Mon/0x/gjFzG2TfnBfczs2Mrx0cN4ts+unj20N3dIG+DnJF8d
      dS4euUJ25CKWrQCNd/pd2vfu49nWLwIsyxmY9UQCUO8cD2M7QHV6svaz2J+agam1njv+aDnN
      xa8HEoA6l13dT2nXZ3FPHUJ7WfS+5+YdcB2GIcGFM9iXzxJ29OKsfwA/mwWqc/2D0RFMFOJ1
      9eBns1JafIoEoI4ppaoH2j22j+iRvVjM36FZa004dAn/x3+CiiOMZRHGMc6OR6o7Nrx1AP7v
      SxAEBPs+B1/5Jn4uXVMdFiOT4eqcUgrHcXAch3JUYqI4ThAEGGOqp7UMX0LF1dPdldZYVy+S
      JAlRFMFf/QA1PVXdCeL1vyUcurzEf039kRJgGYjjmJPXjnJk8gAazcCKPTzUsRfXdTE9qzGu
      h4pCjGWjV67Bs22SJIFM9vpFHAdSssjlbkgAloEgCDgydZCyru7nc3z6HTYWttHud+D39FF5
      9htYl89hOntw1m7Gtm183yf+yjcxf/I9mC3Cs1/C7+ld4r+k/kgAlgGlFDbXe3csru/s4Hoe
      9rpNJP3rsSxrrn1g2zb5rdsJ/vW/xxiD53nSZboAaQMsA77vs7vlMxTsFeTsPLtanqSQub63
      f+0Ul093gdq2TS6XI5/P33Z/nzSTkeBlIo7jucav7/vybX6fSBVomaj1BIn7S6pAItUkACLV
      JAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQA
      ItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLV
      JAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQA
      ItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLV
      JAAi1SQAItUkACLVJAAi1SQAItWcMAyX+h6EWDL/H3W/QQrFw9T0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Peak Hours (Summer)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Peak Hours (Winter)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Quarterly Volume' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWWElEQVR4nO3dV3dc93nv8e+UPb0DMxgUAkRjE7vYZUVHkqsiJbYcW7GTOJYTi7K9lt9A
      bnyTi7POOufkImudhHJ45EiWiyzJFtUosYmUWECCIEgRIApBggAxKAMMBpjedi5gUaGpBoIg
      QP6fzwXXImbmmWfv2b/Z+5k9wDbouq4jhKKMC92AEAtJAiCUJgG4g+jFHCNjsXmpPTIygorH
      wqaf/exnP/vwP79+5v+iB5qo8Gvse/s9LnacpqxuGSSHOdjSRdBZ4v8/+zynWju4Z9N6NGCw
      5yzP/+YlOvqGWFHj4fyVGKX4VTKaH6fFSMuJFqprqgHITfTzz//yDBc6zhFNllhabqGtd4S2
      t94gtG4ttk9p9I3fPctIxkFtZdmnLtBzv/wl69au/cTbO1pbsIeqsfxJ9NMTV/if/+f/UV7T
      QNDv/sTHH3rzZfYeOEz3lTHWLK/j+d3PcPjYSepXrIVMnGd3/SvlzZvxaWl2P7ObE6dOktTt
      LK0OAXCpo5XfvLSH4y2nWbl2AycPvMqet/aBo5yqcg+H3nyFc/1TLG+o4ZVf7ebIsZPs2fMW
      m77wZxx67SUql63hYtd5KirCTF5uZf/5SZbVBj91nczQ2fPb5zh45H2GYjmWN1bxwu5nOHri
      FNGkTqUtxdHOURprKz5HrbvHdZtB0RbgzHvvACVGRqJs27qBl15+nT2vvsWmzet58cVX+Nt/
      2MnTO7/3x41V55U3DrLzRz/me9/+C8xmDc1s5nfP72LXrl109A1hs320WZdySerX7uB7332C
      K71dmM0aZrP52u2nWlooFnO8/vKv+cPbh6+9I+n5KaaNQa72nAHgTOtxXnvlt7xx4BgUs7zy
      61/y3K9eIl2YeUR6YogPeq8CBdpOt9NzroWfP/Mf9AyMYjbbMJvh6IHX2f3sc4xPZwH4/W+e
      J5E3AjqH3vw9L7z4ezIFnbNn22l9bx99Q5MAbNj+MDt37mQqOsDF04cpW/0Q//jdr7Hntf1E
      x6LUVpWTzJXA5OD7Tz3NX/3lI/R1d15bxkBVEzuf3snWRh89g1dpvzjJT37yY04d3kt2epya
      5iZGI+MAfOM7P+CHT/4NlTW1uIxpRhIGHJkRdu3axa5du0kUoK+zjd27f8F4IsvZs+20nzhE
      d3cP7d1XoJCgvaMPgEjncdK+lTz99I/JDpzh6pTOX3//Kf76r/6Sgb5uKhrXE7nYdmu2qjvI
      n7wPmtnUHKSlOwKAO1SPvziIHmjCbzdTMtlxWU1gMGAAIIfd4cNkAIPBQCExRuelCPfddz/f
      +O4PWNVQxbmz5+jraGXXrufIAMcPvsnuZ5+jYkk9ZCY52zMA5Nn78q8p2stoO/gq4wY/U70t
      tF6c2RA6Tx6mYLYzNDBAsgBn2k6z/aE/Z+hyBxgMNK9ajU+P8u6pbgDs/iAth/cT6WwhWnKy
      7539LKlvwGmz0HP2HBlyHDh4jIbGRjTTzJI8+MADfOmxb2ONdZL0LufL25p4Zc8hjh16C91b
      R0OVDwCH1cB//se/sWH7Q4yOjVJTU43NX4GenKCuaTluuzazKg1G2o7u5xcv/I6ljc28v38P
      L+7Zj9fn4cBrv+NSLsCGoI4WqASMWC1GbN4QzUuufwc+8vZr3P/Vx0hGerFVLMUVrGX79m08
      9dQPcJnBGajkkR3NvNtynpPv7SNtrWBZSJtZr4UEZzsvARCJRKhvbARgaW2I4YkkF9qOsvsX
      L1C1dObnNkxkb9mmdWe4YQZYue1huo4fuPb/FQ11VNcvA8BtztHZP8p0LEYeACu55Cijkwli
      sY+OTY1GI4npBKVSCYCGVffy1FN/hw3Y9uDX+NGPnubyhTPXPa+ul8hkshQLBfK5PI1r7iXk
      mtk7nOkZYUW1l40rqznS2o1md1PmdWK12rja0cKh0z0UiwWKxeJMMYNGQ8jOi4d7eGBjE49/
      5++pDdrY88a+Pz6bgSd/+CP0iYscOdN7/QrQr/2Druu4yqrYtKb52s0vPP9LHn3iSbauaaKx
      eRmnW04ycL4VR1XDdWXSUxNULtvIT3+yk/YTx7jv4cf41mMP8/6bL+Np2sq3H/siBneY5GAn
      qUSMRPbGcUwvpukcyrCqxodmtVHMz6z1fDZDNl9EByoqwthsVnRdx+YNsW39SjBANp1hfGyU
      0h9rNa9czfGD71DIZzh+5jINASPOymX89Kc/oav9BABFA5hu6OLudt0MAFARDuO3mTB6K6it
      mjm2dHjL8DotrFq9muMH3+JcT4R7Vi/HBKxetYK39vyBSDzH8sY6jBYHK1Ys4/Bbv8cVqsPv
      tlMR/uhd7eTRw7S1f8CDX31s5ljbbKOizM/WB7/I5EAP6+57iOGes0Qm0qxduwabxUhBN7Bx
      40aWNi9jemyUcDhERUUYgPrmFfR1tOOvqqehoZEyr4NwRQXVYTenu8bZvnEl3WdbaDnbxyOP
      PoLHYaMsHOLkwX0MpUx89aEvYDXPbHwWh5fGZSsYOn+UM30TPP71r2I2cu25AHo722g93U5r
      ezc7Hv4K2UgH566m+eajD3H84Guc749xpaudYHU9p9/fz/HTH/Do1x/H67IDEBka4MzpU7S2
      tuKvWsaahjJe3fsu3/jWt5mK9PKrV95BL0yTKJjxmfOEG9cQ8DgwOXy0HTvCunVrCXntvPSH
      /azeuAarzU2Z14HZ5ibod8/0anVx9fwJrk6XaG5sJBz0Y3WXEdDS/OGNfSRzJTbfu4GTR/Zx
      5PhpvvLo1ynzOmhrP8uGdevmc3tbdAx354mwAv/577v40hNPUumzL3Qzt0z70X2YwmtY3XDr
      B9Wzx96hFFzD+qbwZ9/5LnKXBkCIz0fOAwilSQCE0iQAQmnXzkL19vZ+2v3EbRYIBBa6BSXI
      HkAoTQIglHZDABKRft49cZxINP6ZD44Mz3xl4nTr6WtnHP9YhEgC0lPTDEYiH/PIHMORiRt+
      mpxOXF/ncxge/rj6d5dsfIKL/ZeJJ9Kfed/41MzrNjgwcP26zMaJZyGfyRCLf9xrWyAeT974
      3JnMrF+T+MfWvzUymcznul8hm6HwJ43nMkku9fYwHpukp+8yQwOXP5oBrj0wU2Ld1q2c27uH
      ly4OsWnLZiajUdyBIJGuU1RU1pIslXCU1ZGIjVIR8HAlMkri0Ns4/S6iw2a+sjVIa9t7OPJm
      fBVGRqNxOk68TXXjGgaiSb73rS9yrq2FyxcdvHeqk/s3N1K0V+O1GzDkkozEc9gMGUxWN16X
      kb3vHGXT5ntpOdfN5sYARYOD9q4uNm+7j3gsTkWZi7a2C8TiMS6PTVPv1ck7KzBldWrqw4wP
      D2DWNExGO1PTkwxOpFle5cEVCJErgNNu5Oi+vSxbt4nj75/hgS9vIxSqY0ll+S150eaqmC9R
      WVfHUMc5zsUSVNfUkE4msTldTI0N4nZ5yaFjtvvJZZK4HTZiUwkyPRew2C0kpoysWupi4Gof
      WgEcHhOJRJqRgR68gTCxVJYt65cTGexnYkzj8tUx6peUUdK82DWgkCORKWI25DGYrTgsRrp6
      +qmuqWZgOMqSMjslNCLRKDVL6shkMnhcVgYHhkllMsSSOQK2EkWrG0OuRCDoIxGfwGAyYcRM
      JpdhKl2g3GXB7vKQL+pYNAP9Pd2UV9bQ3z9EQ3MtHneAbCpBNj2NrmnkkjksVgvoBa5GotTU
      BBmNZbAWp/F6K9GdJjKJDC6LiXQRmhtqoVjCarNSKhTRnPYbA2DzOWk90cKqzTsw+y6xtK4R
      a2MjGHTc5hJut4tgZQWRsWlixiJGi5MHvrCNkYHL2MvKaKgNgi2LzzbK0uZ6bE6NfDqDdu92
      3P4gbn8CMLN5+xeYjl1lxxYHVTUBcthw2y1YzGGq0IkOD1Ky+lhWH2YqnqW8IsQWi52agJ2i
      QUNzugn73ZiNZgyandhUivVrVuIfS+A05jHa3QT9QXx+Fz2FNGZ3mFIuQe2SEIFYhqVVFfj8
      PiI9Z4hpNWzYshVPIMSO7WaqaxsJ+323f0v/BJrDymD/FSrrGjA7JvAHytGCM+G0GXUsVisu
      r5upRJa0CYxmK431dUzHJ9AcTsoDLtAKOMxJ/MEAmsVEMZ/HVFOH1e7E6swBRmrrG8im4iw1
      WfD6nBTRsGomTEYjXiA5PYlushMq85DJFnG4XNSaNHxOCyWDEZPVhsdhw2QyYTBppLJ5qqsq
      cCRyWI1FMFtwOVw4HDYo5jBZ3ZQKWQIWD65UAb/XhcPhID42SMrko7q2FqvdRX2dEV+gHK/D
      QcIIHq8HgElDFLs7gNsKmKy4XDZMmgsND5rmxOS0oXnh6uUeMkYXmVQKo9VGLp3GZrfh8/k+
      OhMsnwItLvIp0O1xwx5ALD75TIqrw6P4/T6mU1k8diNGi4/01BhWtx+P8+75vtPtJp8C3QHM
      Vjsum8ZUKodmBI/PSSaVJzoeJZ/LL3R7dzQJwB0gOTnGZLqAxaiTzOSZiMaIT8fxerzkCxKA
      uZBDoDuAyx+iyX/9zwKL4wOqO57sAYTSJABCaRIAoTQJgFCaBEAoTQIglHbtY1A59b642O1y
      dvd2uBaA/v5+BgcHF7KXG5jNZsLhMBs2bFjoVsRd6toh0PDw8EL28bEKhcKi7EvcPa59GzQe
      j5PPL77T6pqm4fV6F7oNcZeSP4wllCafAgmlSQCE0iQAQmkSAKE0CYBQmgRAKG3eA/DhZZKk
      xq2tczfVuFV1bqbGvP9K5DOvnebKyNScaui6jsFguCtqfFad+kof//joxs+sUSqVMBrn9v61
      WGosZC9zCkA+k6S78zwlexnZTIqm2jBTqQLGQpJ4xsA9Kxq5FInR2T8+l6dR0onXdmNY/QRb
      ak386789x5NP/Dm/3XuMrauW0D00xaNfvo/39u/n0uAoPreNutX30t52hr974vGFbv2OMtfI
      4Q7X47WbKfO68ASCWExg1ixYrdotalE9+elh+obijI2Ocb71FCVDkf3vnyKbmEaz2XC5XIAB
      i8PPN7/5GJnJKKm8zo5t2xa69TvOnPYAOjOXA62urmE6mWZiZIhktojDrFMeDN2iFtWjucN8
      5/tPcenyIK7qrXx/+Vo8Hg9TU1OMDl6iubGW7s4estkUkZFxmrc+TNgDFy5dYWldlXKXOp2L
      ef8uULFYxGSa20tSKBSuu6L8nVxjMfWyWGosZC/zPgT//PU2GYIXaS/zVeOhjfU8fG/9nOre
      LvMyBNsMOcZTRVY2N8gQrKDVDSEmR6/y6quv87Xv/gOpoW5azl/CSQqzp4zM+ARbHvwSbmOG
      /Xv3UnHPFjrPnaW50ouvehn3LFt623qdhyFYZ2h4lGQycYtaFHciX6ia1Rs3EXSYMBiMbN+6
      BbPZjK5niMUSdF7oQi+VqFu/g4aAFZfLxUQsxoULnbe1z3kZgtffu/lzX8lD3KX0PE3NK7lw
      4QI2U5GBK4OsWLECgzNEc/UQRpOZq/EsseEBHKYampuaqAs6iabnfog5GzIE3+Yai6mXxVJj
      IXuRIfg211hMvSyWGrOpc6sH7HkZghOxYcoq66ko98kQLG6p1Q0h+s+3crStk//x+N8y1H4Y
      3RnCl+wmtfQRet99jq0PPUZh7CJH2zrRAiHMOmxY7mYy28i6e64/PzWnITiXnCJeMOMw64CB
      Qj7PyMgIbreHaDQ6l9JCfKJCsYRmLDI0PAZAd1cX2WyWnt5OQqFKLnZ1EI1n0IxFKqvrAMhm
      s3T39NxQa95ngH9/9ZQcAi3SXhZLjdnU+e+HQMPDw4TD4Wu3fTgDTEVHMPtCOMyfXU+G4Ntc
      YzH1slhqLGQvc/sYVC/S3z9ITVUFo7EE5V47Od2Mnk2Qw0KZz80//fyAzABi0ZrTDFDI5nCY
      i3xwcYhsappcEaYnJ+jq7rpV/Qkxr+Y4BE/SG5nErZUYjyfJJOIMDo3gdrnkTxqKO4IMwbe5
      xmLqZbHUWMheZAi+zTUWUy+LpcZC9jIvQ/B45AqaK0BVqEyGYLGozcsQXFtXSzFfuFU9CjFv
      5rQH+HAIrvB7GI9ncDviDA6NohfyhKtrb1WPQswbGYJvc43F1MtiqbGQvcx7APL5/KL42zOL
      pcZi6mWx1FjIXub969Amk2nOC2YwGO6aGoupl8VSYyF7kSvECKXN+x5gOjZG35URfG4z3som
      +rs7WLdu7ed67NiVCxiDKxi5dJ5yj0bBvoSqstldPnQyOsLV6BSGUo7mukq6I0nuaVoyqxrZ
      1BQXey+h2awEl8xuGf67SN95MgYf2C1MjQyxbt26Wdfo67mAwxdiYixy0+skm4jRMzCOx1rA
      M8vX5EOp6Um6unpwuF1U1Dbf3DopZfnggx5cNgu6xz+HddKJ5gwwPRmd9TqZ9wDEk1maK730
      pUxke89S1D7/Be+CAS+RImSSKdJWC7qpOOvnt9ps+P1GClMjnLs0jt9tmX0NhxOKRbC5GJ3l
      MnyomInT29eP2aXjr3Yxnbi535k2mUykUqk5rZPo+CQaaZK6h8xNLo/D7aMsVIFFM9/0OkEv
      kSvkSSdKGOzJm14nZrPG+Pg4pczs18m8B6CizEv3lVHqqkIkrAZCs7gA9FB0mrTJSFPjElJ5
      AzbH7Dfe+OQkyRxUhuvQEombugB1anoao92B3+Mlr5lmtQwfMtm83P9n9zM6WcRgSONZvnzW
      NWDm2sma1TandRKuDNPT10+wLEDeYbmp5UEv4vUGMBl1dGb3ul5j0HA57HjcPkwW/abXiUXT
      qKoOYiM963UiM4BQmlwgQyhNAiCUJgFQyET/Od4708u58x033Hau4/wnP264j+lMgb2vv0zb
      B5/+y04fV3sxm/chWCweueQUY9EsJdMgbbkclz+4SNSo47BrhFxmLvcPMdrXTjAYxNV0PzWW
      SXovXiZQ5uKeTbWMDV3BXV7Fv/yv/03t8lU0NDUy3HcecyFFzLMSV/IyRk3jwDtH+OFPd+K4
      A95eZQhWSGLsCmmjg4GhUQrTEzidZWgeN2ZNJz81Qc7opJiI4nQ6CNavRUuNcPrCFTatWYrd
      HWRgoI90psDk2BihcJjJjI4pO4HD4cRe0cjYxbNoDifxiTjrtu7AcQe8vUoAhNLugJ2UEPNH
      AiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0
      CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITS
      JABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBK
      kwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAo
      TQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgCh
      NAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE
      0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQ
      SpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQ2n8B
      +PrFxKXWgf8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Subscriber Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Ending Locations' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dR2xlWXrffze8nBNjkSxWYrFy7jytmZZGrWB5ZHgMSxAge2Vr4YW9kLcD
      GAa8MKCNF/LKgA1DFmB4YQmSxhOkrk6Vi6zAnDP5cg43ecEqVnrFZjUvWZx+5wc88L73Ls93
      wv2/c8695zufZFmWhUDQoshvOwMCwdtECEDQ0ggBCFoaIQBBSyMEIHgFrVrg8cOHPHo8Ts14
      +VuTTDKNYYGp15mZGGV+Nc1u7qTUCimWNnKYRo10qrCLlN4cIQDBK+QXH3Pr8SoOh4r0yrcN
      Pvvbn1M1YOrOZzxazpNZWWV98iu+Gk++cGZy5BfcmC1RTS8wuZJ9rb3lkev8+f/4v+TLy/zi
      58O2l2c71H21JvgVwWRlbpIRtwKVBa7fXaWSL/C9D05wb2KZ7EaV3wBinV1s/Ow20YvvMjl0
      l1+uTdOuXOPnf/NXlNQuTgcWuF3JETzn4s6yzi/zeUzZy7V+J/eW6xQLDf7Nn/wRKC4GehQe
      zawB8NXf/AW/vDPFD//wn/L1X/wdkk8j1t1HTnNy0pvl9vgqF37wYz5958SuSyp6AEETVC5+
      +Bv8/o8+wW3BwKUPGezwMja1zq/9zu/QG/MD4Ai088//6A+Y/vJvifYPcPHd72Gl5okcPo1U
      KnL81ACX3vuYuN9BamWJC9//xyS0EiVJ5dKHv06HD56OsHpPX2D+0V1Mo8DUUp1TvQmy+RKx
      Qye5cuoElz76BJ9aYnJ6nfc//gGHO0K2lFQSD8IEL1NJz/PXP/0a1Rvi6uWTmGoUPTVHsC3K
      1zfv4Q918+FHVyivT/P5jSHiR85z7USMn/78SwYGBxgdnSAc7eLqxR7+7uc3uXj6CBXJz+Lj
      O/j7znIkaGGGD5Gen2Tw/DkKyxMUXYeQNh6yarahpMfJam6OnjpOab1KJKDjbu9leX6Wdo/O
      V0MznLn2PQZ6YrsuqxCAoKV5a0Mg0zTflmmBYIt9nwQ/vfB1XUdRlP02LxC8gA0CsJgb/py0
      b5A+b5ahR4vEeo/R628wNL5A19EzeKjS193O46klTg0cRYy6BAeFXc8BaoUNpiamqIaO0mGt
      UHV10dMZY3bsIcdOnWbs0SSyoiObBvHDp0iE3EiApmk4HA6biiEQfDt2PQcYun2Tcq3C4sIS
      wXgnWnGDu/ceYkkykiwhY2HqdXKlKrIiN3mwIhC8PXbdA5SLebT8GiM5N72eEtOLG6jBDvpD
      OiOza8R7B/FS5ejhToZG5rl4/hSyJIkeQHAgeGu3QYUABAcB8SRY0NIciLVAa5kS/+f6qC1p
      fXrtGEe6IrakJfjucyAEkCvV+OmtaVvSuni8UwhAsGPEEEjQ0ggBCFoaIQBBSyMEIGhphAAE
      LY0QgKClEQIQtDRCAIKWZtcCMLUqX37+OeW6zuTDO/zys6+paDpjQ7e4/uVNylqFpaUMhdQy
      K6miHXkWCGxjl0+CLVbnpjFUB7VahYrl58PzTh48msftT3C+W2JlZYN63iClFxk83/mCM8ze
      rMOzhMONYMfsSgB6OcnoUh6XVCZbLOJwuHH43eilNK54GKdLxSzkWJ2bIdDTj0OWMU0Dy7Iw
      TRNd1wEwnvy1A8MwttIVCL6J3fUAqo/jR7pZmJ1AUbyUUvf4+0WDgSvvsvDoLku6yakrFzCP
      +wm7C8yuZjjSFUVi89f/6XJoRbVvSZKiqGKZtWDH7OrKU10++vp89PT0IkkSfW2/hmGBqsh0
      fvARpiWhqDIJP0hSlxiaCA4ctvz0yvLmXFpSlK1ZtaSoz46fHEjS23OILF2/TuXzL2xJK/Gn
      f4rkOBALaQW7pGVaUV/foPbwkT2JWa/Z0+j/fQbp128Cu2Pa4vDJh7tPR/CNtIwA9oVaHaq1
      3adTbzRPXqvyX7/6L7tPH/ig/3tc6X3HlrR+lREC+BVCN3Vuzn9pS1r9saO2pPOrjngSLGhp
      hAAELY0QgKClEQIQtDRCAIKWRghA0NKI26CCFzBqy2iFIVvSckY/QlaDtqS1VwgBCF5AL01Q
      mbPnYZvqHzzwAhBDIEFLs2uHmEqpiGbJBPw+GpUyNU3H6w+CXqOuS/j9LnTNQpEtDEvCoYqw
      SK2MZVlUCjlb0nK63Thcnl2lsTsBWHVmJ6cplfK0nbjA2tg9PKEoPYf7mXz8EMPU6T9zhvxa
      HZ+SQYn10/0kxqygNdEaNf7Xf/y3tqR16Yf/hIu//nu7SmN3ApDcxEIu1vMqQY/KdDmP6Y6i
      GBrx3n66Qw4Wk2kWxieJHhnkStSPYRiYpolpmjQam4u+7PTgMnR9K93nMQ2jydnfjoamNY10
      o1qWLWNK0zLRm5RB0zQbUt/EMIym9WQY9rWFrumYL9nQGvaVwTSbl+FN2J0ADI3QoeNckCdY
      zlZ57+NPoTLH8FQaf1il5qgiOz30HD9DvZKkqh3G61RQFOWFABmqnR5hqorT6Xzlc9nGiJRO
      hwOpiQ1s8neQJblpGRqWfZ5uiqI0tWEp9rWF6lBRX7Zh2fdDJMvNy/Am7FIADUbuD1HRFU6d
      62dx8iEbJZPzly+RmnnE6ILEpUsnyap1wj0+UtkinvawiBMm2FMmU0n+dmJn8SZ2JwCnj8vv
      fLD1NnbhGiefHIdOX+LpgtvOzs2JSs/BviMm+I5Q1TSWC/kdnStugwpaGiEAQUsjBCBoaYQA
      BC2NEICgpRECELQ0QgCClkYIQNDSCAEIWhohAEFLIwQgaGmEAAQtzbYC+NnPfsbS0tJ+5UUg
      2He2XQ2aTCY5fPgwhUKBYLDJUk6rxp0vb5Gr1Bi49B4b47dJFTQuffgRs8M3yVcNLr5/hcxy
      laAzT93bRV+bWBIqODjsaAj0Z3/2Z82/kNwcPdZPOBRCpoY70s8PPznL9IM5wr3H+eDaGTLr
      SdbmJ1nKQU8iiGmaGMZmnDBd19F13VZvLdM0ttJ9/mWZr9nT/1vQLH1d122LgPN83bz8soun
      MdpefpmmfW3xNF7b8y9Dt7Otm5fBeIMy7NgfYHx8nNnZWT799NNnH1oWLn+QtnCWYqWBaeqY
      moLkUDEME9PUQZLxBcMYjQqGZaE+8ZqSJOlZZBnZvqmIJMlb6b74uX1uOLIsN8+zXTYkmpah
      2Wff2sRz9f/y53YhN2mL/SiDLO3cxrYCeO+994jFYvzoRz+ira0Nt9v94gn1IkPDD6g3DE6c
      P0IuOc/f39C49uF7zA3f5vaCxeV3L+CUqsT8dZbWshzuiiJLEoZhPBOAjZX+ukqx7eJkGwHY
      hITUNP39EYCNNuRXbUjy3rf1m1xP2wqgv78fgPPnzwMQiURePMEd5P0PPtp62x19n9NPjs9d
      e+YpFjy8uRNEYMfZEgj2hx3J3TRNtEYN3bBvHC0QHAR2MAcocf3nd8kkR3Ee+ojf/fj0N/+L
      QPArwg56AImZR7eQIl2YdgSAEwgOENv2APVymnt3HtF/4TKWaRA+1L5f+RII9oVtewDF4aHn
      cIzFuTxHe8PMzqzvV74Egn1hWwGoTi+H+gYIu7J8fesBnrBvv/IlEOwLO5gEa0S6z/DJ1TN4
      vbvbiVcgOGjsYBJsMX/vl/z3v/zffH5/eu9zJBDsIzsQgI8Pf/MTutvaGDh6aO9zJBDsIzsQ
      QJ4bd5d593w3168P732OBIJ9ZAcC8OJ3Fbj+xRCJHnEbVPDdYgeTYJOjZ96jrzfC4vrughEI
      BAeNHfQAdYZvD7G+MsOjiZW9z5FAsI/soAcI0t9h8PndeS588P2Xvmvw4MYd0pU6g5feYXXk
      FvkGDF68xsbEEMmyydX3L5BZrRFylynKEXoSwiNMcHDYgQAKPB5fpe/sZabvT3CuL/7Cvw9e
      vkphZYZCvY7u8HH+9EncVEjHurl2VGFleYNSskJaNTl7oRfLsrY8p8wnXlp2eVI9Tcts5v1l
      ow3TspCa2JCevHaLhdXUg800976ebG0L81Ublo1lgN2XYQcC8NLdFWT49h2u/vaPX/pOJrUy
      RVWJcDgRQip4mZsYQnJ24Y24kBUVzArFXAp3LIEsSViWuSWCp5lvesF+S6wnAfhexrRTAIaB
      1CTmmGKXDat5ndjprmhZzevJsuxrC9MyX/mhsLOtzSYCe2p3p2wrAMvUeHjzC2g/xx9/3M7Y
      fPHFE/Qct2+NEEyEURxnSG+kyVer9J+OsDE1zELd5MJ7l7D0AFFvidmVNEe7Y8hsVsTT4HiK
      jQHsZEVpGnTPTm8qVVWRmgX2s8nrTJKkpmVQDfsC2Mly83oyZPvaQmnSFqZhY1vLctMyKG9Q
      hm1rNLs4ynTOzcnoGn/+3+7xL//VH7/032F+78c/2nrb1/69reP+zmfzhfjA5t/EjrMlEOwP
      2wpANxpM3f+aFb9GtQyjE/N0XRvYr7wJBHvOtgJI9F/m3/37i1vv7XSYFggOAtv3APUKdRO0
      ukUk4t+vPAkE+8a2AihnFvnrX37O2jJcffcEiZ4TnDrSuV95Ewj2nG3HNOHOAX73Nz8h5qvz
      4OEomthLV/AdY/srWpIIJzpQ3AF++6NTjEyIjXIF3y12tBr0yvle7ownef/Kyb3PkUCwj+zo
      ycqpq9/n1NW9zopAsP/soAco89O//gV1Tbf1MbZAcBDY0cZYlbVJ/udf/CVfPZjd+xwJBPvI
      DoZAHgbOnsQKd6O6xVJmwXeLHfQABW7cfMD60gqP7k3sfY4Egn1kBwLwM3CinQf3h+k/d/yV
      b58uq91c4tzkGGtr+bOda80FAjvYkU9wIV8jGPE2mQTXuf/VbfKVMr1n3yE9eYdcSePMux8y
      //A2pbrBuXcub8YIc+TQgz0iRpjgQPEN/gAGjUaemtLJH/z4BH/7D3NcOd7x3BlOLr73LvPj
      ozgcDfzxY1x9183NGwvEDw9wPqyymEyxMj1Hqbefy0eDW/HBTNNE0zQADBtjXxmGvpXu89gZ
      h0zT9KZRSFTLssUjzLRMjCZl0DQbY4QZRtN6Mgz7bOi6jvWSDd3OMpivK4NNMcKqxXV+/tMv
      qBkGf/V3Nzl85v2XzrCYGRsl3HOckEsnvZJFq5goPhf1hobe0JFVB4lDh2nU8jQME5eyOeqy
      LOs5hxj7HD2aOWGA3Q4xyltyiNl7ZxLTRuckVVFRXrJh2erU07wMsrLztt72TG+oi9/7Zz+i
      zaNgmhaa9tK2KHqRuflVHt69wUrOxG3l+XJojVNn+lCK6wyNr9HV1UYkFmPweDfrqTxI0tav
      p/T02L6wUYC0le7zLztjhDVLX5Ik24ohvaYMdsZS47Xp22nj1braj7Z+k5bY0ea4+bqLjz++
      htsXeum/Q3zyWz989r7tGieeHA5efIfBJ8e+ns1dpcXe0oKDxg76CpPc+jLDw8PMr2b2PkcC
      wT6yo8FSuZAllUpRrNT3Oj8Cwb6yoyfBv/+Hf0DNNPFHhFu74LvFjoZApWKB7Mo4X94Ta4EE
      3y120AMYLM/NkqnmsULCHVLw3WJ7n+DcEn/zV39PDTAadQJxW+9hCQRvnW2HQJ5gB5/+o9+i
      N+5H9UQ5f+rwPmVLINgfthVAKTnFf/4P/4npnERXR4xapbpf+RII9oVth0DecA//4k/+NU9X
      VvjDYm8gwXeLbQWgunz0Hzu2X3kRCPYdsdGPoKURAhC0NEIAgpZml4uzdUbv3qbm6+LiwCFu
      f/EPlA2FwYtXWR65S6ZicOWDK6SXq4TdRcqOBL3CI0xwgNilAFQGz55jdDGNZRroipNjxwYI
      WFW8Xf2cDCssrayTXcmS9Xu5eCH4Qlywp547dodIauYRZKc/smGaSE1syNgUI8yymnqwGcbe
      19ObhBf6JswmNkw7y2Dtvgw2uueo9Pf1kM/MsV6P4I952LwcrM3YVrqB9fSTt+Ecb6fNt+bc
      vw927Y1hd+DZpQDq3Ltxk7lsGYfLSX5+gXy1zvELJ9mYuM/X0xaX3ruEbAaJ+SvMr6Q58lyM
      sKexwex0V5RkuWnMMclGG4qiNA2SZxeSJDUtg52x1F5XT3a2hay8asN4A3fFb0KSXlOGNwjk
      sksBuLj0vR9w6enbQ88c5nviH28dR45tjvsjuzMmENiOuAskaGmEAAQtjRCAoKURAhC0NEIA
      gpZGCEDQ0ggBCFoaIQBBSyMEIGhphAAELY0QgKClEQIQtDRCAIKWZtcCqBYzpHIlwKKYWWdq
      fhXLssinVpldXMNCp1yuYzSqYndpwYFj1y6R68sr5CU/Ub+D0YkZIm6LcVkhv7ZKyKUx75Ko
      pjVUI0Wkb5CAPfkWCGxh1y6Rh4/0M7qYxjRrBCOHOH7Czc3P1okf76Ar6GRxI8XC2CTho4Mc
      D7gwDAPT3Ayh2mhshlzS7QySp+tb6T6PnUHyGprW1PVRtSxbxpSmZaI3KUOzgHDfFsMwmtaT
      rUHyNB3zJRtaw74ymGbzMuhvUAbbXCIlyUmplCG/JOPqDJPLFAkYOrI7TO/AefTaBvmqRsjj
      QFEUNE3D4XBsZqJZwLlviaKqOJ3OVz6XbfSmcjocSE1s2BWHTJbkpmVoWA5b0odN77JmNiwb
      AxaqDhX1ZRuWfT9Esty8DOoblGH3LpG37pHXdFzeAL0JN6Mpk6sXDrExN8ZCzsHFs3Fybo2Q
      N0yqUiHoCdkbJ00g2AW7d4n88KPn3kdo69086uwf5Gk0gVjMBUCHZ3fWBAK7EbdBBS2NEICg
      pRECELQ0QgCClkYIQNDSCAEIWhohAEFLIwQgaGmEAAQtjRCAoKURAhC0NEIAgpbGvrWvWNQq
      ZeqagccXAL1G3ZDw+1wYuoUiWeiWhEPdu8ASAsGbYp8ALIP7t2/hDkbo7T/C5OMHGKZO/9mz
      5Ffr+JQMSqyf7piINi84ONgmAMs0KZXzmO4YqqER7z1Cd8jBQjLNwvgk0SODXIn6hUfYDhAe
      YTvjQHmEIcl88Gu/hVWeZXgqjT+sUnPWUBxueo6foV5JUtUO43UqwiPsGxAeYTvDDo8wGyfB
      FvPjw9wdz3H6XD9eLc/IfIHurjbCkRAnBw6TzhZ/FQIHCloI+3yCZQeDF99h8Mn70JlLHHty
      7OnadAXrETGyBQcMcRtU0NIIAQhaGiEAQUsjBCBoaYQABC2NEICgpRECELQ0QgCClkYIQNDS
      2Lgc+jksnclHQ6yV4MrVU2TW64TcNYr46YyJCAGCg8OeCKBRzFNzRTnbDssrSRpFi1Q9y8C5
      83thTiD41uzJEMgwLNweFy63H0OrsTj5iKrsxamIEZfgYLEnV6TL5yE9P82d+48JxuP0Dlyk
      J2Awv54Tq0EFB4o9GQLJTi9Xrr2DZoLb7aTNbyFLnRimuPwFB4u9mQQjoTpdW4kryqajiCqz
      6Q1mWViWhfHES8vtUDh3JGGL5YDHsZXu88jxOI7Tp22xYVgWUjMPs1gE7PB5joagWfqWxOn2
      c7tPH4h5Yk3ryVJCyH575momrldsWBZ0HB18zX+8Gb5wtGkZvKrK0Uh0R2lIlmXt68+y9dzF
      r7yBl9bTbEpv4HX1pjZM00SWdz4qtCwL0zT31MablmE/bFiW9Ubt8G1s7FcZ9qgHeD2SJCFJ
      EoZhvFEBvw1vauNN8/NUzHtpwzTNrTrbKxvfhbb4tmXY9x7gKd/mV+Sg2fg2vdJBtfFdaItv
      k77yk5/85Cf2Z+ebeZpZyzS4f+Mzxqfn8US78Lsk1uenWMnrhD06X31xg+mpCQh0EvHKTI8M
      MTK1RCieQLaednsW63Pj3Hs8RbitE7cqb9koppapSn7SiyPUlQj1zAaSP4BVK3D/zm3WChrR
      gJPHY+MEgjGcDhmtmuPOrdukygbxiB/DlFBkCctsMHL/DnMbFTraY8iShITG0lIKv8vi0dQS
      iZCXtUyBgO/ViIB6owGKggRUCynu3rlLti4TC3gwZRlZkjCNBg/ufM1yXqcrEXnh1//hrc8Y
      m17GE4rjd7/eQT67vo7s96MC9VoVSVaRt7k4JElidvQ+wyMTVC0X8XDgG/37LUMnmc7g83m3
      P3Hr/DqP7t1mdq1Ae3sbigTVwhqT8zniseBrI4cajQr3b35Nuq7QHg1iVVMs5SXk8ipLOQOv
      VaVgSHidDqDM+noDv/95R3mL1NIUY4t5OhKRV8r11gTwFMswKDYsrly+hN+lACaNeoNCrUF7
      ooPew4ehViba2YWbIsNjGd65copqZo3rX93AFUoQ9rtZWFihtztAruIhGnxWAbVyjkzRJL2x
      gGk5yOYzdLW3o9VrxA4dppRcwhcIU9NqeF0B3G6V1fFHyF0n6W8PsjR+k3tjWdo64ziNMmsl
      BZ9WwN/eiUMCJJmZ2Wk8DonJ+RUSER+5ko5UzzCzkiES9jM98oiyKTHyxees6hLt0SjL04/w
      dJ+mN+pi8tYNJnJF4tEEslkmU1Yx63k6OztfqKtsocrFc4eZmFzHZRWZXcsTCXrIpdbJlnXS
      y1NkahJaeoXFdAoUP9VCCtnlYHVmjqV0iXjYx9zkGGu5OtFoaOs++Fo6x+ULZ1icnScY8LCx
      vgEOhdnxMTTFi6oVGBmbwumPIDcKPB4ZI1vV8Lk90CiRb0hotQqNUprRyTl8wQDVmoZDMinX
      NYxqikw9SKeSoeTvJuiE1dlpNko12uNRSuUKTtWkWNbYWJomXbEIB33UK2kqVoh6KU1nZweS
      CrNTS2hamVyuhGTWcPqieJwKUGRxUSOR8JFdX2BiZoWA38GNL24TPtRLPbPIcrpK0C1Rx4le
      Kuz/HKAZS1MPWV1eYvDS+7QHnUSjYdZLSQCMWp6i5OewUwIpxJmjIb7+6hbHz5ylq7ubtrAf
      LBOHpPNoJsfg0TCG5efJjSf8/iDzG7M4fd006lks3EiAy+tjdnKccEc/gWCIYimzlZ+uk2cY
      fTDMvSU3g91tHPK14XUomJpCIz1JI3ycUjaHNxYGJAKSxVouT39bhIWNdaKJQ1z/2WdolozD
      UWN0Lsm5SBftHZ14e7tQZOg9foaRhw8YloL0xtvwdffgdshYdYvM8jSxI8fYSJVoiz/bSGxj
      YYzV1RU6jhzj819eR5dkJNfHpOeXOXvuCI8mFjl8LoFkGEQ6elhdnMPn0FB9MhtZC5ecYnWt
      RtURo7w6j36sh6fTxmpmhc+/TOKPdZGaGScX7KI2OYaro5/piVFO90ZZWppjraTR5ZXpOtTL
      eibL/PwsIaVO2pFArRdIeGFxdoqioRKUdTrjLgxvDzF3gNLGfTKmwoVjFmCxmi0Td6ukKjWy
      iwvEPFCUnTy89xBkB5HEj/BYEsszo/QNHCeVrxEPeZGsAg0tgNdRp1jRSHhe7Q0LmSTzE+PU
      XCG6e3rp6Ygyffcx43N5Ap9+QCGbw6oXDsZiOG8gQkdHBx6HDGjMT02zOD/HRq7M+vIKHd1d
      m8MAvUIyXyceclEzZBrlHLlSFfQqqVIDr15kYiX7QjenuP2UF5bwdXXgyK1iBGMApKYfslg0
      KBbzlHJJ5ubmmZ5ZQAMKmRSSJ4iChurykllfpWaYlItZTDVOZm6YQv2ZkUNdbkYXGvQfiTIx
      kiQWchBp6+LM+XPEw230dgSYnpnD5YG11TSmtdlAijeMotVxBVTWl9fRdItaZg053MbcgyHq
      L+1v09Z7ku//4BNO9rYRbe/mzKWLRNxOevuPEPD76elOMDE1jcPlI56I43E9aV5JJpZoI+T3
      IUkyxWySfLn2QtqKy0t7e4J6OY/sCNB/5BBet4P0xhq6JZNKpuk+cgIXDTA11pMb1DWLmGqy
      bAXwFaaR/F2k0kX6jh5DtTT64w7uz5RJRDzo1RyWK0LYbZKr6BjFJTJFg6JeZ3E+TcyvMJHW
      6Qy6ae/u4+y5M3hkKGys4W+P8/j+Q6wnt5gDeoWC00enV2ex7MSlPGuLjaUZpueX2cgUOX6k
      F8O08Hi9+DwNijUfh9uiSJ4wcm4Gw9v+9ibBT7Esi1x6g7puEYq24XFapDdSaKaFLxjBKVs4
      XG5kCbBM8tkMDUslGglRLWYxVS9Bn4tyIUfNUPC4VNxe7wvKrpSKOL1+jFoFnG5cqkKjWiKT
      L4HiIOxzkiuUQVJJtMdBq5HO5HH7QwQ8KplUFn80ilOGbCaNw+NDVRx43JtDLcvUKJU1AgE3
      hUKFYNBPtZSjUNGJRIIUslmcvhBeh0W2WCMWDWM2amRyBbzBCD6nRCqTJxyNoUoGmXQGt8+H
      JDvxPjfWr9fruFwusCwqpTzFqk4kGkayQFUlsqk0sjuAzymjuFxo9ToSFrKqYhoSkqVTr6T4
      xS++Qo708tufvLPVA1SKWQrlOr5gBLcCssuFbOpk0hlc/jAuSSNbrOPzeXDIJrlCFX8wiEcx
      KesyDquB5PRiNcoUKjp+v4vF0fsYsUEGe6NYlkkhm0GTnMQiQSythi67cCpQq9VxKhIVzcLv
      cZLPZtBQiUbCYDZIp3N4/T4U1Y3bqaDVKmiSE7diUGmA3+t6UgqD1FoSy+HG55SoNgw8/iAq
      Bg6Xk0ImhYETj9fiztcPOf/ue29fAALB2+RADIEEgrfFW70LtDE/xq2hxxRq0BYL72hrzY2N
      DXw+367sGo0KD+/dZqMi0R4LAhZr0+MUFB+BbW4vNsUyWZoZ4cH4AhGfRN7w4XNuXxBNK5LP
      m3iaTN62szM3/oBHE4sEYwncDvu3mbdMjbHhe8yulehojyNLJpPDd3g4NonhCBENekguTXJv
      aBRnMEZ5Y5Z7D8bwRNrxuVQ25se5+3AcVzCGU5F28GTWYn1+nHsPxpA9IRQtz/j0GvG2KDIW
      qaVp7g6PoPoiuNVvSs8ivTzD3eERFF/4hfMruTVu3rqH7IsT9DrR60VufvEFMwvrb1cA2UyS
      /sGLFJemcfpDFAsp6qbE2vw0JV3Bp2qMjk5gOX24ZY2J8QmWUjkifj+q1CBZ0LD0OmajxPjE
      DKo3QKNex+VUKZZKm+PlJqxMP8bVOcjRzjCyLGMZGnMLs5QqEmGfgmapaOUShqUxOTGFwxvC
      7Wxe+Y38GrN5ictnTqBWVhmey9Go1wi6JcbGJjBUL0qjyPTMHJV6nZW1ND6fwRyZac4AAAVu
      SURBVOjQLHVFIeJ3MT89Qcl0oko6mfVVLGcAl/pS52wWGBpNcu3KaWRFoZhaZnpuBU8gSL1e
      R9IqVA2Jhelx8g0Zn2yRyaWo6RLJpRmKmkLQ73nt/XYA6iVWCuDTi3jbO3FKJhvZKlevXiYa
      3Hyu0dCgvy/G7EKWWDzK0b4407MpOtsjDD14wKVr11AaBf7h+ldILj/R0PbPFBSnj0PtQabm
      14mG/FRLJSJtcRR0Hg6Nc+bqZZxmlS+/+BzNchGJhV4zbDEZHnrE+avXcFs1rl//Al1yEo6E
      ya4tEO7uZWM1TWd7FK1RwXJEuXB+8O0KILU4wfDYHIoniLeWYaZq4SmlKDvDFNfncagqj0dG
      mF8vojby+BPdaNUKeiVPLlNgqVCims/gUQwePB5lLdfAqRWRzArJqpdYsLkA1mYnmFtdZWkp
      TVdvF3o5xXpeplZKkQi6Wc7WSK+vklwYYWxmifWSwfHejqZpFZNpCIWJBXwotSzzJRdqLYXH
      qfLw0WNmVrNElRpWuI3l6Tl8DgnJo9KourHyi6TrJe7eHWFxcQO3s0K+4aOzLYwiv3TVyC58
      SpX7w6P4YgHmpjcIy2VykodsJo27usKGEWZ56gGTk4uEvTKzhTqBRpqv74+wsrxG37ETvEbH
      wObW6CvTw9R83fhU8HldTD+6x9T84lYPIJk1JmeTHDvej8OsMjmfYmDgCKoiE/I5Gb43BP44
      KhZ9vT24nI5tBCBhVrPcHhol2nGI7s44+XSGcCKOgkw44OTB/SF0VwSHZNLX14vL5XyNiGWi
      ITfD9+6jOcOosklfXx9up4N6Kcedh9Mc6+9EdvmQjTK3b9xiZT3zducAssNNR2cXsl6irrs4
      PnAUn8dFuZClpllk1zfoOj5I0GVt3gHKZak3TMJ+D3P5OoekHGU5QiaZpm/gFG5Z51B7mFsP
      Vjjc/fqdeGOdnUTDCbyqiW5Ccn6OfCmHlk+RUiJUVx4hB7txu4OcOH2W00cPvTatYFuY1YkJ
      xiemKNQaJDq6CAZ95NfWSfQPEHTLqE4P8XgH8USESNAPElQrBQp1E4/TQe+RE1y5eAqHO8jx
      /kOgVanUGuTy+WeG9Crpkk5bxEupWqdRq5LNFUGWyafWmJpboZzL4ol00RXzoBtOjg0cw+P2
      0NN/nIsXzuCUQatXKVcb5J9P+wmVUhbTkSA/P0yutnmZubxBuru7Cfk2f0yG7txBdaoU8nmG
      hoZxOBTyxQoAmUyWtvY4lUoDl9Ug8+Tz16OzkSrQ3p4gm0yRWltkaXmJpdUUlmWQTheJtyWo
      1eq4FZNMfrvdxQ3SqTzx9jjVWh2/YpLMFbGwWF/P0Jdwc+vBNKoigyQTibXR3dXxdu8C1cp5
      0rkSHn+YoFsFpxMVk3QyiewOEvTIbKTzeH1+fC6ZZDqPLxAk4FYp1gw8qoUmOXBYDVL5Cn6/
      l+ziGCmrjUuDPa+1a5kGmVQSxRsi7PdQq1ZxejxIRoOarmA1SqjeIIpZJ5nK4AlGCfnc25Yj
      W2wQjwYwZBey2dgcw6bzuP0+fE4V2elGr9dQZBlLtsgmM6i+IBG/m0wquXk71+/CoTox9To6
      KoZWfzbfsUxymRQ1QyERj1LJp1mbHkc9dpmwnseQVALBEPlMEofbj8/lRHY9q09T9RCLhDbT
      NhUMvf7KXOppvageP6riwOfdvHVYrDbwh2OEfG4yyVWqDROPP4RVL1LTTLzBCJGAl1I+TaFi
      EE/EMaoFSrpMPBzcpgewKBdy5Es1wrEEejlDsarh8PhJRIJUijny5QaxRAJJK5Mr6cQTkdf8
      altUCjly5QaxeBxJr5Ar68RjEfRaiXS+SjDgwen2o6CRXN9AR+H/A5KFAqM8Vr6gAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Starting Locations' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='Volume' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='Volume (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Volume Bike ID' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
